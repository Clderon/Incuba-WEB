<!-- views/admin/users/index.html.erb -->

<style>
/* Estilos heredados de eventos y dashboard */

/* Animaciones para las tarjetas estadísticas */
.stat-card {
  position: relative;
  transition: all 0.3s ease;
  overflow: hidden;
}

.stat-card:hover {
  transform: translateY(-5px);
}

.stat-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, #3b82f6, #8b5cf6);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.stat-card:hover::before {
  opacity: 1;
}

/* Clases base de utilidades */
.mb-6 { margin-bottom: 1.5rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-3 { margin-bottom: 0.75rem; }
.mt-4 { margin-top: 1rem; }
.mt-2 { margin-top: 0.5rem; }
.mr-2 { margin-right: 0.5rem; }
.mr-3 { margin-right: 0.75rem; }
.ml-4 { margin-left: 1rem; }
.flex { display: flex; }
.flex-col { flex-direction: column; }
.justify-between { justify-content: space-between; }
.items-center { align-items: center; }
.items-start { align-items: flex-start; }
.gap-3 { gap: 0.75rem; }
.gap-4 { gap: 1rem; }
.grid { display: grid; }
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }

/* Tipografía */
.text-2xl { font-size: 1.5rem; line-height: 2rem; }
.text-lg { font-size: 1.125rem; line-height: 1.75rem; }
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.text-xs { font-size: 0.75rem; line-height: 1rem; }
.font-bold { font-weight: 700; }
.font-medium { font-weight: 500; }
.font-semibold { font-weight: 600; }
.uppercase { text-transform: uppercase; }
.tracking-wider { letter-spacing: 0.05em; }

/* Colores */
.text-gray-800 { color: #1f2937; }
.text-gray-700 { color: #374151; }
.text-gray-500 { color: #6b7280; }
.text-gray-400 { color: #9ca3af; }
.text-gray-900 { color: #111827; }
.text-white { color: #ffffff; }
.text-blue-600 { color: #2563eb; }
.text-green-600 { color: #16a34a; }
.text-green-700 { color: #15803d; }
.text-green-800 { color: #166534; }
.text-red-600 { color: #dc2626; }
.text-red-700 { color: #b91c1c; }
.text-yellow-600 { color: #d97706; }
.text-yellow-800 { color: #92400e; }

/* Fondos */
.bg-white { background-color: #ffffff; }
.bg-gray-50 { background-color: #f9fafb; }
.bg-gray-100 { background-color: #f3f4f6; }
.bg-blue-600 { background-color: #2563eb; }
.bg-blue-100 { background-color: #dbeafe; }
.bg-green-100 { background-color: #dcfce7; }
.bg-green-50 { background-color: #f0fdf4; }
.bg-red-100 { background-color: #fee2e2; }
.bg-red-50 { background-color: #fef2f2; }
.bg-yellow-100 { background-color: #fef3c7; }
.bg-yellow-200 { background-color: #fde68a; }

/* Padding y margin */
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }
.py-4 { padding-top: 1rem; padding-bottom: 1rem; }
.py-10 { padding-top: 2.5rem; padding-bottom: 2.5rem; }
.p-5 { padding: 1.25rem; }

/* Bordes y sombras */
.border { border-width: 1px; }
.border-gray-200 { border-color: #e5e7eb; }
.border-green-200 { border-color: #bbf7d0; }
.border-red-200 { border-color: #fecaca; }
.rounded { border-radius: 0.25rem; }
.rounded-lg { border-radius: 0.5rem; }
.rounded-md { border-radius: 0.375rem; }
.rounded-full { border-radius: 9999px; }
.shadow { box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06); }
.shadow-sm { box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); }
.shadow-md { box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); }

/* Estados hover */
.hover\:bg-gray-50:hover { background-color: #f9fafb; }
.hover\:bg-gray-100:hover { background-color: #f3f4f6; }
.hover\:bg-blue-700:hover { background-color: #1d4ed8; }
.hover\:text-blue-900:hover { color: #1e3a8a; }
.hover\:text-gray-600:hover { color: #4b5563; }

/* Transiciones */
.transition-colors { transition-property: background-color, border-color, color, fill, stroke; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-all { transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 300ms; }

/* Layout específico */
.w-full { width: 100%; }
.w-0 { width: 0px; }
.w-5 { width: 1.25rem; }
.w-6 { width: 1.5rem; }
.w-10 { width: 2.5rem; }
.w-12 { width: 3rem; }
.w-48 { width: 12rem; }
.h-5 { height: 1.25rem; }
.h-6 { height: 1.5rem; }
.h-10 { height: 2.5rem; }
.h-12 { height: 3rem; }

/* Estados específicos */
.hidden { display: none; }
.block { display: block; }
.inline-flex { display: inline-flex; }
.absolute { position: absolute; }
.relative { position: relative; }
.right-0 { right: 0; }
.top-0 { top: 0; }
.z-10 { z-index: 10; }
.z-20 { z-index: 20; }

/* Tabla */
.overflow-hidden { overflow: hidden; }
.overflow-x-auto { overflow-x: auto; }
.min-w-full { min-width: 100%; }
.divide-y { border-top-width: 0px; border-bottom-width: 1px; border-style: solid; }
.divide-gray-200 { border-color: #e5e7eb; }
.text-left { text-align: left; }
.text-center { text-align: center; }
.whitespace-nowrap { white-space: nowrap; }
.leading-5 { line-height: 1.25rem; }
.truncate { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
.object-cover { object-fit: cover; }

/* Espaciado */
.space-x-2 > * + * { margin-left: 0.5rem; }
.flex-shrink-0 { flex-shrink: 0; }
.flex-1 { flex: 1 1 0%; }

/* Responsive */
@media (min-width: 768px) {
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
  .md\:flex-row { flex-direction: row; }
  .md\:items-center { align-items: center; }
  .md\:mb-0 { margin-bottom: 0; }
  .md\:w-auto { width: auto; }
}

@media (min-width: 640px) {
  .sm\:flex-row { flex-direction: row; }
}

/* Animaciones */
.animate-fade-in { animation: fadeIn 0.5s ease-in-out; }
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Búsqueda */
.w-80 { width: 20rem; }
.pl-10 { padding-left: 2.5rem; }
.pr-10 { padding-right: 2.5rem; }
.pr-3 { padding-right: 0.75rem; }
.pl-3 { padding-left: 0.75rem; }
.w-4 { width: 1rem; }
.h-4 { height: 1rem; }
.inset-y-0 { top: 0px; bottom: 0px; }
.left-0 { left: 0px; }
.pointer-events-none { pointer-events: none; }
.placeholder-gray-500::placeholder { color: #6b7280; }
.focus\:outline-none:focus { outline: 2px solid transparent; outline-offset: 2px; }
.focus\:ring-2:focus { box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5); }
.focus\:ring-blue-500:focus { --tw-ring-color: #3b82f6; }
.focus\:border-blue-500:focus { border-color: #3b82f6; }
.duration-200 { transition-duration: 200ms; }
.items-stretch { align-items: stretch; }

/* Estados y badges */
.status-indicator { display: inline-flex; align-items: center; padding: 0.25rem 0.75rem; border-radius: 9999px; font-size: 0.75rem; font-weight: 500; }
.badge { display: inline-flex; align-items: center; justify-content: center; padding: 0.25rem 0.75rem; border-radius: 9999px; font-size: 0.75rem; font-weight: 500; letter-spacing: 0.025em; }
.badge-success { background-color: rgba(16, 185, 129, 0.1); color: rgb(16, 185, 129); }
.badge-warning { background-color: rgba(245, 158, 11, 0.1); color: rgb(245, 158, 11); }
.badge-danger { background-color: rgba(239, 68, 68, 0.1); color: rgb(239, 68, 68); }

/* Iconos en tarjetas estadísticas */
.stat-icon { transition: all 0.3s ease; }
.stat-card:hover .stat-icon { transform: scale(1.15); }

/* Dropdowns */
.dropdown-menu { border: 1px solid #e5e7eb; box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }

/* Estados de botón */
.btn { display: inline-flex; align-items: center; justify-content: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-weight: 500; transition: all 0.2s ease; }
.btn-primary { background-color: #3b82f6; color: white; }
.btn-primary:hover { background-color: #2563eb; }
.btn-secondary { background-color: #f3f4f6; color: #4b5563; }
.btn-secondary:hover { background-color: #e5e7eb; }

/* Estados específicos para mensajes */
.px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }

/* Modal personalizado para index (suspensión) */
.modal-dialog {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 1rem;
}

.modal-content {
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  max-width: 28rem;
  width: 100%;
  overflow: hidden;
}

.modal-header {
  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
  color: white;
  padding: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.modal-title {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0;
  display: flex;
  align-items: center;
}

.modal-title i {
  margin-right: 0.75rem;
  padding: 0.5rem;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 0.375rem;
}

.modal-body {
  padding: 1.5rem;
}

.modal-body p {
  margin-bottom: 1rem;
  color: #374151;
}

.modal-input {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #d1d5db;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  transition: border-color 0.15s ease;
}

.modal-input:focus {
  outline: none;
  border-color: #f59e0b;
  box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
}

.modal-footer {
  background-color: #f9fafb;
  padding: 1rem 1.5rem;
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  border-top: 1px solid #e5e7eb;
}

.modal-btn {
  padding: 0.75rem 1.5rem;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s ease;
  border: 1px solid transparent;
  cursor: pointer;
}

.modal-btn.primary {
  background-color: #f59e0b;
  color: white;
}

.modal-btn.primary:hover {
  background-color: #d97706;
}

.modal-btn.secondary {
  background-color: white;
  color: #374151;
  border-color: #d1d5db;
}

.modal-btn.secondary:hover {
  background-color: #f3f4f6;
}

/* Estilos corregidos para modales en index */
.modal-backdrop {
  position: fixed !important;
  inset: 0 !important;
  background-color: rgba(0, 0, 0, 0.6) !important;
  z-index: 9998 !important;
  backdrop-filter: blur(4px) !important;
}

.modal {
  position: fixed !important;
  inset: 0 !important;
  z-index: 9999 !important;
  overflow-y: auto !important;
}

/* Asegurar que cuando no esté hidden, se muestre correctamente */
.modal-backdrop:not(.hidden) {
  display: block !important;
}

.modal:not(.hidden) {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  padding: 1rem !important;
}

/* === ESTILOS MEJORADOS PARA EL MODAL DE DETALLES === */

/* Dialog mejorado */
.detail-modal-dialog-improved {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 1rem;
}

.detail-modal-content-improved {
  background-color: white;
  border-radius: 1rem;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  max-width: 800px;
  width: 100%;
  max-height: 90vh;
  overflow: hidden;
  position: relative;
  border: 2px solid #e2e8f0;
}

/* Header mejorado con color azul */
.detail-modal-header-improved {
  background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%);
  color: white;
  padding: 2rem;
  position: relative;
  overflow: hidden;
  text-align: center;
}

.detail-modal-header-improved::before {
  content: '';
  position: absolute;
  top: -50px;
  right: -50px;
  width: 100px;
  height: 100px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
}

.detail-modal-header-improved::after {
  content: '';
  position: absolute;
  bottom: -30px;
  left: -30px;
  width: 80px;
  height: 80px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 50%;
}

.header-content-improved {
  position: relative;
  z-index: 2;
}

/* Botón cerrar mejorado */
.btn-close-detail-improved {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background-color: rgba(255, 255, 255, 0.15);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.3);
  padding: 0.5rem;
  border-radius: 50%;
  width: 2.5rem;
  height: 2.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  backdrop-filter: blur(10px);
  z-index: 3;
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn-close-detail-improved:hover {
  background-color: rgba(255, 255, 255, 0.25);
  transform: scale(1.1);
}

/* Sección del avatar */
.user-avatar-section {
  margin-bottom: 1.5rem;
}

.user-avatar-container {
  position: relative;
  display: inline-block;
}

.user-avatar-image {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  object-fit: cover;
  border: 4px solid rgba(255, 255, 255, 0.9);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
}

.user-avatar-placeholder {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.2);
  border: 4px solid rgba(255, 255, 255, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  color: white;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
}

.avatar-status-indicator {
  position: absolute;
  bottom: 2px;
  right: 2px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 3px solid white;
}

.avatar-status-indicator.activo {
  background-color: #10b981;
}

.avatar-status-indicator.suspendido {
  background-color: #f59e0b;
}

.avatar-status-indicator.inabilitado {
  background-color: #ef4444;
}

/* Información del usuario centrada */
.user-info-centered {
  text-align: center;
}

.detail-title-improved {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 0 0 0.5rem 0;
  color: white;
}

.user-subtitle-improved {
  font-size: 1rem;
  opacity: 0.9;
  margin-bottom: 0.25rem;
  color: white;
}

.user-id-improved {
  font-size: 0.875rem;
  opacity: 0.7;
  margin-bottom: 1rem;
  color: white;
}

.status-section {
  display: flex;
  justify-content: center;
}

.status-badge-improved {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  background-color: rgba(255, 255, 255, 0.2);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(10px);
}

/* Body del modal mejorado */
.detail-modal-body-improved {
  padding: 2rem;
  max-height: 50vh;
  overflow-y: auto;
}

/* Alerta de suspensión mejorada */
.suspension-alert-improved {
  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
  border: 1px solid #f59e0b;
  border-radius: 0.75rem;
  padding: 1rem;
  margin-bottom: 2rem;
  display: flex;
  align-items: flex-start;
  gap: 1rem;
}

.suspension-icon {
  background-color: #f59e0b;
  color: white;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.suspension-content-improved h6 {
  color: #92400e;
  font-weight: 600;
  margin: 0 0 0.5rem 0;
  font-size: 1rem;
}

.suspension-content-improved p {
  color: #92400e;
  margin: 0.25rem 0;
  font-size: 0.875rem;
}

/* Grid de información mejorado */
.info-grid-improved {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.info-section-improved {
  background-color: #f8fafc;
  border-radius: 0.75rem;
  padding: 1.5rem;
  border: 1px solid #e2e8f0;
  transition: all 0.2s ease;
}

.info-section-improved:hover {
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.1);
  border-color: #3b82f6;
}

.section-title-improved {
  font-size: 1.125rem;
  font-weight: 600;
  color: #1e293b;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding-bottom: 0.75rem;
  border-bottom: 2px solid #e2e8f0;
}

.section-title-improved i {
  color: #3b82f6;
  font-size: 1rem;
}

.info-content {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.info-row {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: 0.5rem 0;
  border-bottom: 1px solid #f1f5f9;
}

.info-row:last-child {
  border-bottom: none;
}

.info-label {
  font-weight: 500;
  color: #475569;
  min-width: 40%;
}

.info-value {
  color: #1e293b;
  text-align: right;
  flex: 1;
}

.info-badge-improved {
  display: inline-flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  background-color: #dbeafe;
  color: #1e40af;
}

.status-badge-small-improved {
  display: inline-flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
}

.status-badge-small-improved.activo {
  background-color: #dcfce7;
  color: #166534;
}

.status-badge-small-improved.suspendido {
  background-color: #fef3c7;
  color: #92400e;
}

.status-badge-small-improved.inabilitado {
  background-color: #fee2e2;
  color: #991b1b;
}

.empty-value {
  color: #94a3b8;
  font-style: italic;
}

.created-by {
  color: #64748b;
  font-size: 0.75rem;
}

/* Sección de acciones mejorada */
.modal-actions-section-improved {
  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin-top: 1.5rem;
  border: 1px solid #cbd5e1;
}

.actions-title-improved {
  font-size: 1rem;
  font-weight: 600;
  color: #1e293b;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.actions-title-improved i {
  color: #3b82f6;
}

.modal-actions-grid-improved {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 0.75rem;
}

.modal-action-btn-improved {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.2s ease;
  border: 2px solid transparent;
  cursor: pointer;
}

.modal-action-btn-improved.primary {
  background-color: #3b82f6;
  color: white;
}

.modal-action-btn-improved.primary:hover {
  background-color: #2563eb;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.25);
}

.modal-action-btn-improved.success {
  background-color: #10b981;
  color: white;
}

.modal-action-btn-improved.success:hover {
  background-color: #059669;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(16, 185, 129, 0.25);
}

.modal-action-btn-improved.warning {
  background-color: #f59e0b;
  color: white;
}

.modal-action-btn-improved.warning:hover {
  background-color: #d97706;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(245, 158, 11, 0.25);
}

.modal-action-btn-improved.danger {
  background-color: #ef4444;
  color: white;
}

.modal-action-btn-improved.danger:hover {
  background-color: #dc2626;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(239, 68, 68, 0.25);
}

/* Footer mejorado */
.detail-modal-footer-improved {
  background-color: #f9fafb;
  padding: 1.5rem 2rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  border-top: 1px solid #e5e7eb;
}

.modal-btn-improved {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
}

.modal-btn-improved.secondary {
  background-color: #f3f4f6;
  color: #4b5563;
  border: 1px solid #d1d5db;
}

.modal-btn-improved.secondary:hover {
  background-color: #e5e7eb;
  color: #374151;
}

.modal-btn-improved.primary {
  background-color: #3b82f6;
  color: white;
  border: 1px solid #3b82f6;
}

.modal-btn-improved.primary:hover {
  background-color: #2563eb;
  border-color: #2563eb;
}

/* Responsive */
@media (max-width: 768px) {
  .detail-modal-content-improved {
    max-width: 95vw;
    margin: 0.5rem;
  }
  
  .detail-modal-header-improved {
    padding: 1.5rem;
  }
  
  .detail-modal-body-improved {
    padding: 1rem;
  }
  
  .info-row {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
  }
  
  .info-label {
    font-weight: 600;
    min-width: auto;
  }
  
  .info-value {
    text-align: left;
  }
  
  .modal-actions-grid-improved {
    grid-template-columns: 1fr;
  }
  
  .detail-modal-footer-improved {
    flex-direction: column;
    gap: 0.75rem;
  }
}

/* Animaciones mejoradas */
@keyframes slideInUpImproved {
  from {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.detail-modal-content-improved {
  animation: slideInUpImproved 0.4s ease-out;
}

/* Scroll personalizado */
.detail-modal-body-improved::-webkit-scrollbar {
  width: 6px;
}

.detail-modal-body-improved::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 3px;
}

.detail-modal-body-improved::-webkit-scrollbar-thumb {
  background: #3b82f6;
  border-radius: 3px;
}

.detail-modal-body-improved::-webkit-scrollbar-thumb:hover {
  background: #2563eb;
}

/* Manejo de formularios en botones */
.modal-action-btn-improved form {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

.modal-action-btn-improved input[type="submit"] {
  width: 100%;
  height: 100%;
  padding: 0.75rem 1rem;
  border: none;
  background: transparent;
  color: inherit;
  font-size: inherit;
  font-weight: inherit;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: inherit;
  transition: inherit;
}

.modal-action-btn-improved input[type="submit"]:hover {
  background: transparent;
}

.modal-action-btn-improved input[type="submit"] i {
  margin-right: 0.5rem;
  font-size: 0.875rem;
}

/* Asegurar que los button_to se vean igual que los links */
.modal-action-btn-improved.success form input,
.modal-action-btn-improved.danger form input,
.modal-action-btn-improved.warning form input {
  color: white;
}





/* Estilos para botón eliminar */
.delete-user-btn {
  background: none !important;
  border: none !important;
  padding: 0 !important;
  cursor: pointer !important;
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.delete-user-btn:hover {
  background: none !important;
  border: none !important;
  transform: scale(1.1);
}

.delete-user-btn i {
  transition: all 0.2s ease;
  font-size: 14px;
}

.delete-user-btn:hover i {
  color: #dc2626 !important;
  transform: scale(1.2);
}

/* Estilos para la confirmación personalizada (opcional) */
.delete-confirmation-modal {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.75);
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
}

.delete-confirmation-content {
  background-color: white;
  border-radius: 0.75rem;
  padding: 2rem;
  max-width: 28rem;
  width: 100%;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  border: 3px solid #ef4444;
}

.delete-confirmation-header {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
}

.delete-confirmation-icon {
  background-color: #fee2e2;
  color: #dc2626;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 1rem;
  font-size: 1.5rem;
}

.delete-confirmation-title {
  font-size: 1.25rem;
  font-weight: 700;
  color: #1f2937;
  margin: 0;
}

.delete-confirmation-message {
  color: #4b5563;
  margin-bottom: 1.5rem;
  line-height: 1.6;
}

.delete-confirmation-actions {
  display: flex;
  gap: 0.75rem;
  justify-content: flex-end;
}

.delete-btn-cancel {
  padding: 0.75rem 1.5rem;
  background-color: #f3f4f6;
  color: #4b5563;
  border: 1px solid #d1d5db;
  border-radius: 0.375rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.delete-btn-cancel:hover {
  background-color: #e5e7eb;
}

.delete-btn-confirm {
  padding: 0.75rem 1.5rem;
  background-color: #ef4444;
  color: white;
  border: 1px solid #ef4444;
  border-radius: 0.375rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.delete-btn-confirm:hover {
  background-color: #dc2626;
  border-color: #dc2626;
}
</style>

<% if flash[:notice] %>
  <div class="bg-green-100 border border-green-200 text-green-800 px-4 py-3 rounded mb-4 animate-fade-in">
    <div class="flex items-center">
      <svg class="h-5 w-5 text-green-600 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
      </svg>
      <p class="font-medium"><%= flash[:notice] %></p>
    </div>
  </div>
<% end %>

<% if flash[:alert] %>
  <div class="bg-red-100 border border-red-200 text-red-800 px-4 py-3 rounded mb-4 animate-fade-in">
    <div class="flex items-center">
      <svg class="h-5 w-5 text-red-600 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
      </svg>
      <p class="font-medium"><%= flash[:alert] %></p>
    </div>
  </div>
<% end %>

<div class="mb-6">
  <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-4">
    <h1 class="text-2xl font-bold text-gray-800 mb-3 md:mb-0">Gestión de Usuarios</h1>
    
    <div class="flex flex-col sm:flex-row gap-3 w-full md:w-auto items-stretch md:items-center">
      
      <!-- BARRA DE BÚSQUEDA -->
      <div class="w-full md:w-80">
        <%= form_with url: admin_users_path, method: :get, local: true, 
                      id: "search-form", 
                      class: "w-full" do |form| %>
          <div class="relative">
            <%= form.text_field :search, 
                                value: params[:search],
                                placeholder: "Buscar usuarios por nombre, email...",
                                class: "w-full h-10 pl-10 pr-10 text-sm border border-gray-200 rounded-lg bg-white text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200",
                                id: "search-input",
                                autocomplete: "off" %>
            
            <!-- Icono de búsqueda -->
            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
              <svg class="w-4 h-4 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
              </svg>
            </div>
            
            <!-- Botón de limpiar -->
            <% if params[:search].present? %>
              <%= link_to admin_users_path(estado: params[:estado]), 
                          class: "absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600 transition-colors duration-200",
                          title: "Limpiar búsqueda" do %>
                <svg class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </div>
      
      <!-- FILTROS Y BOTÓN CREAR -->
      <div class="relative flex-shrink-0" id="filtroEstadoDropdown">
        <button id="filtroEstadoBtn" class="flex items-center px-4 py-2 border border-gray-200 rounded-lg shadow-sm bg-white text-gray-700 hover:bg-gray-50 transition-colors whitespace-nowrap">
          <i class="fas fa-filter mr-2"></i> Filtrar por Estado
          <i class="fas fa-chevron-down ml-2 text-gray-500"></i>
        </button>
        <div id="filtroEstadoMenu" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-10 border border-gray-200">
          <%= link_to "Todos", admin_users_path, class: "block px-4 py-2 text-gray-700 hover:bg-gray-100" %>
          <%= link_to "Activos", admin_users_path(estado: 'activo'), class: "block px-4 py-2 text-gray-700 hover:bg-gray-100" %>
          <%= link_to "Suspendidos", admin_users_path(estado: 'suspendido'), class: "block px-4 py-2 text-gray-700 hover:bg-gray-100" %>
          <%= link_to "Inhabilitados", admin_users_path(estado: 'inabilitado'), class: "block px-4 py-2 text-gray-700 hover:bg-gray-100" %>
        </div>
      </div>
      
      <%= link_to new_admin_user_path, class: "flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg shadow-sm hover:bg-blue-700 transition-colors flex-shrink-0 whitespace-nowrap" do %>
        <i class="fas fa-plus-circle mr-2"></i> Crear Usuario
      <% end %>
    </div>
  </div>

  <!-- MENSAJE DE RESULTADOS DE BÚSQUEDA -->
  <% if params[:search].present? %>
    <div class="mb-4 text-sm text-gray-600">
      <% if @users.any? %>
        <div class="flex items-center text-green-700 bg-green-50 px-3 py-2 rounded-md">
          <svg class="h-4 w-4 text-green-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
          </svg>
          Mostrando <%= @users.count %> resultado(s) para "<span class="font-semibold bg-yellow-200 px-1 rounded"><%= params[:search] %></span>"
        </div>
      <% else %>
        <div class="flex items-center text-red-700 bg-red-50 px-3 py-2 rounded-md">
          <svg class="h-4 w-4 text-red-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
          </svg>
          No se encontraron usuarios para "<span class="font-semibold"><%= params[:search] %></span>"
        </div>
      <% end %>
    </div>
  <% end %>
  
  <!-- Estadísticas rápidas -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
    <div class="bg-white overflow-hidden shadow-md rounded-lg stat-card">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center text-blue-600 stat-icon">
              <i class="fas fa-users text-xl"></i>
            </div>
          </div>
          <div class="ml-4 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Total Usuarios</dt>
              <dd class="text-lg font-bold text-gray-900"><%= User.count %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow-md rounded-lg stat-card">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-12 h-12 rounded-full bg-green-100 flex items-center justify-center text-green-600 stat-icon">
              <i class="fas fa-user-check text-xl"></i>
            </div>
          </div>
          <div class="ml-4 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Usuarios Activos</dt>
              <dd class="text-lg font-bold text-gray-900"><%= User.where(estado: 'activo').count %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow-md rounded-lg stat-card">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-12 h-12 rounded-full bg-yellow-100 flex items-center justify-center text-yellow-600 stat-icon">
              <i class="fas fa-user-clock text-xl"></i>
            </div>
          </div>
          <div class="ml-4 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Usuarios Suspendidos</dt>
              <dd class="text-lg font-bold text-gray-900"><%= User.where(estado: 'suspendido').count %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow-md rounded-lg stat-card">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <div class="w-12 h-12 rounded-full bg-red-100 flex items-center justify-center text-red-600 stat-icon">
              <i class="fas fa-user-times text-xl"></i>
            </div>
          </div>
          <div class="ml-4 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Usuarios Inhabilitados</dt>
              <dd class="text-lg font-bold text-gray-900"><%= User.where(estado: 'inabilitado').count %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <div class="bg-white rounded-lg shadow-md overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead>
          <tr class="bg-gray-50">
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Usuario</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rol</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ocupación</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Última Actividad</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @users.each do |user| %>
            <tr class="hover:bg-gray-50 transition-colors">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="flex-shrink-0 h-10 w-10">
                    <% if user.avatar.attached? %>
                      <%= image_tag user.avatar, class: "h-10 w-10 rounded-full object-cover" %>
                    <% else %>
                      <div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                        <i class="fas fa-user text-gray-400"></i>
                      </div>
                    <% end %>
                  </div>
                  <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900"><%= user.nombre_completo %></div>
                    <div class="text-sm text-gray-500">ID: <%= user.id %></div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900"><%= user.email %></div>
                <% if user.dni.present? %>
                  <div class="text-sm text-gray-500">DNI: <%= user.dni %></div>
                <% end %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  <i class="fas fa-user-tag mr-1"></i>
                  <%= user.rol_principal || 'Sin rol' %>
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= user.occupation&.nombre || 'No especificado' %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="relative">
                  <% case user.estado %>
                  <% when 'activo' %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                      <i class="fas fa-check-circle mr-1"></i>Activo
                    </span>
                  <% when 'suspendido' %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                      <i class="fas fa-user-clock mr-1"></i>Suspendido
                      <% if user.suspension_until %>
                        <span class="ml-1 text-xs">(<%= user.tiempo_restante_suspension %>h)</span>
                      <% end %>
                    </span>
                  <% when 'inabilitado' %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                      <i class="fas fa-user-times mr-1"></i>Inhabilitado
                    </span>
                  <% else %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                      <%= user.estado.humanize %>
                    </span>
                  <% end %>
                  
                  <!-- Dropdown para cambiar estado -->
                  <div class="absolute top-0 right-0 -mr-1">
                    <button class="estado-dropdown-btn text-gray-400 hover:text-gray-600 p-1" data-user-id="<%= user.id %>">
                      <i class="fas fa-chevron-down text-xs"></i>
                    </button>
                    <div class="estado-dropdown-menu hidden absolute right-0 mt-1 w-40 bg-white rounded-md shadow-lg py-1 z-20 border border-gray-200">
                      
                      <!-- ACTIVAR: Si NO está activo -->
                      <% unless user.activo? %>
                        <%= button_to cambiar_estado_admin_user_path(user), 
                            method: :patch,
                            params: { estado: 'activo' },
                            data: { 
                              confirm: "¿Activar usuario #{user.nombre_completo}?"
                            },
                            class: "w-full text-left px-3 py-1 text-xs text-gray-700 hover:bg-gray-100 border-0 bg-transparent cursor-pointer",
                            style: "background: none; border: none;" do %>
                          <i class="fas fa-check-circle mr-1 text-green-600"></i>
                          Activar
                        <% end %>
                      <% end %>
                      
                      <!-- SUSPENDER: Solo si NO está suspendido -->
                      <% unless user.suspendido? %>
                        <a class="block px-3 py-1 text-xs text-gray-700 hover:bg-gray-100 cursor-pointer" 
                           data-bs-toggle="modal" 
                           data-bs-target="#suspenderModal<%= user.id %>">
                          <i class="fas fa-user-clock mr-1 text-yellow-600"></i>
                          Suspender
                        </a>
                      <% end %>
                      
                      <!-- INHABILITAR: Solo si NO está inabilitado -->
                      <% unless user.inabilitado? %>
                        <%= button_to cambiar_estado_admin_user_path(user), 
                            method: :patch,
                            params: { estado: 'inabilitado' },
                            data: { 
                              confirm: "¿Inhabilitar usuario #{user.nombre_completo}? Esta acción es permanente hasta reactivación manual."
                            },
                            class: "w-full text-left px-3 py-1 text-xs text-gray-700 hover:bg-gray-100 border-0 bg-transparent cursor-pointer",
                            style: "background: none; border: none;" do %>
                          <i class="fas fa-user-times mr-1 text-red-600"></i>
                          Inhabilitar
                        <% end %>
                      <% end %>
                    </div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-gray-700">
                <div class="text-sm"><%= user.ultimo_acceso&.strftime("%d/%m/%Y") || 'Nunca' %></div>
                <% if user.ultimo_acceso %>
                  <div class="text-xs text-gray-500"><%= user.ultimo_acceso.strftime("%H:%M") %> Hora</div>
                <% end %>
              </td>
<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
  <div class="flex space-x-2">
    <!-- Botón para abrir modal de detalles -->
    <a href="#" 
       class="text-blue-600 hover:text-blue-900 transition-colors" 
       title="Ver detalles"
       data-bs-toggle="modal" 
       data-bs-target="#showUserModal<%= user.id %>">
      <i class="fas fa-eye"></i>
    </a>
    
    <%= link_to edit_admin_user_path(user), 
                class: "text-yellow-600 hover:text-yellow-900 transition-colors", 
                title: "Editar usuario" do %>
      <i class="fas fa-edit"></i>
    <% end %>
    
    <!-- Botón eliminar CORREGIDO -->
    <%= button_to admin_user_path(user), 
                method: :delete,
                data: { 
                  confirm: "⚠️ ¿Estás seguro de eliminar a #{user.nombre_completo}?\n\nEsta acción es IRREVERSIBLE y eliminará:\n• Toda la información del usuario\n• Sus roles y permisos\n• Su historial en el sistema\n\n¿Continuar?"
                },
                class: "delete-user-btn",
                title: "Eliminar usuario",
                style: "background: none; border: none; padding: 0; cursor: pointer;" do %>
      <i class="fas fa-trash-alt text-red-600 hover:text-red-900 transition-colors"></i>
    <% end %>
  </div>
</td>
            </tr>
          <% end %>
          
          <% if @users.empty? %>
            <tr>
              <td colspan="7" class="px-6 py-10 text-center text-gray-500">
                <div class="flex flex-col items-center justify-center">
                  <i class="fas fa-users text-gray-400 text-5xl mb-3"></i>
                  <p class="text-lg font-medium">No hay usuarios disponibles</p>
                  <p class="text-sm mt-1">Crea un nuevo usuario para comenzar</p>
                  <%= link_to new_admin_user_path, class: "mt-4 inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg shadow-sm hover:bg-blue-700 transition-colors" do %>
                    <i class="fas fa-plus-circle mr-2"></i> Crear primer usuario
                  <% end %>
                </div>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- MODALES FUERA DEL LOOP - AL FINAL DE LA PÁGINA -->
<% @users.each do |user| %>
  <!-- Modal para suspensión temporal -->
  <div class="modal-backdrop hidden" id="modalBackdrop<%= user.id %>"></div>
  <div class="modal hidden" id="suspenderModal<%= user.id %>">
    <div class="modal-dialog">
      <div class="modal-content">
        <%= form_with url: suspender_temporalmente_admin_user_path(user), 
            method: :patch, local: true, class: "w-full" do |form| %>
          <div class="modal-header">
            <h5 class="modal-title">
              <i class="fas fa-user-clock"></i>
              Suspender Usuario
            </h5>
          </div>
          <div class="modal-body">
            <p>¿Por cuántas horas desea suspender a <strong><%= user.nombre_completo %></strong>?</p>
            <%= form.number_field :horas_suspension, 
                placeholder: 'Número de horas',
                min: 1,
                max: 8760,
                class: 'modal-input',
                required: true %>
            <small style="color: #6b7280; font-size: 0.75rem; margin-top: 0.5rem; display: block;">Máximo 8760 horas (1 año)</small>
          </div>
          <div class="modal-footer">
            <button type="button" class="modal-btn secondary modal-close" data-modal="suspenderModal<%= user.id %>">Cancelar</button>
            <%= form.submit 'Suspender', class: 'modal-btn primary' %>
          </div>
        <% end %>
      </div>
    </div>
  </div>

 <div class="modal-backdrop hidden" id="detailsBackdrop<%= user.id %>"></div>
<div class="modal hidden" id="showUserModal<%= user.id %>">
  <div class="detail-modal-dialog-improved">
    <div class="detail-modal-content-improved">
      <!-- Header del modal mejorado -->
      <div class="detail-modal-header-improved">
        <!-- Botón cerrar en la esquina -->
        <button type="button" class="btn-close-detail-improved" data-modal="showUserModal<%= user.id %>">
          <i class="fas fa-times"></i>
        </button>
        
        <!-- Contenido del header centrado -->
        <div class="header-content-improved">
          <!-- Avatar grande y centrado -->
          <div class="user-avatar-section">
            <% if user.avatar.attached? %>
              <div class="user-avatar-container">
                <%= image_tag user.avatar, class: "user-avatar-image" %>
                <div class="avatar-status-indicator <%= user.estado %>"></div>
              </div>
            <% else %>
              <div class="user-avatar-container">
                <div class="user-avatar-placeholder">
                  <i class="fas fa-user"></i>
                </div>
                <div class="avatar-status-indicator <%= user.estado %>"></div>
              </div>
            <% end %>
          </div>
          
          <!-- Información del usuario centrada -->
          <div class="user-info-centered">
            <h2 class="detail-title-improved">
              <%= user.nombre_completo %>
            </h2>
            <p class="user-subtitle-improved"><%= user.email %></p>
            <p class="user-id-improved">ID: <%= user.id %></p>
            
            <!-- Badge de estado -->
            <div class="status-section">
              <span class="status-badge-improved <%= user.estado %>">
                <% case user.estado %>
                <% when 'activo' %>
                  <i class="fas fa-check-circle"></i>Activo
                <% when 'suspendido' %>
                  <i class="fas fa-user-clock"></i>Suspendido
                  <% if user.suspension_until %>
                    (<%= user.tiempo_restante_suspension %>h)
                  <% end %>
                <% when 'inabilitado' %>
                  <i class="fas fa-user-times"></i>Inhabilitado
                <% end %>
              </span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Body del modal -->
      <div class="detail-modal-body-improved">
        <!-- Información de suspensión si aplica -->
        <% if user.suspendido? && user.suspension_until %>
          <div class="suspension-alert-improved">
            <div class="suspension-icon">
              <i class="fas fa-exclamation-triangle"></i>
            </div>
            <div class="suspension-content-improved">
              <h6>Usuario Suspendido Temporalmente</h6>
              <p><strong>Hasta:</strong> <%= user.suspension_until.strftime('%d/%m/%Y %H:%M') %></p>
              <p><strong>Tiempo restante:</strong> <%= user.tiempo_restante_suspension %> horas</p>
            </div>
          </div>
        <% end %>

        <div class="info-grid-improved">
          <!-- Información Personal -->
          <div class="info-section-improved">
            <h3 class="section-title-improved">
              <i class="fas fa-user"></i>
              Información Personal
            </h3>
            
            <div class="info-content">
              <div class="info-row">
                <span class="info-label">Nombre Completo:</span>
                <span class="info-value"><%= user.nombre_completo %></span>
              </div>
              <div class="info-row">
                <span class="info-label">Email:</span>
                <span class="info-value"><%= user.email %></span>
              </div>
              <div class="info-row">
                <span class="info-label">DNI:</span>
                <span class="info-value">
                  <%= user.dni.present? ? user.dni : content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Teléfono:</span>
                <span class="info-value">
                  <%= user.telefono.present? ? user.telefono : content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Estado:</span>
                <span class="info-value">
                  <span class="status-badge-small-improved <%= user.estado %>">
                    <% case user.estado %>
                    <% when 'activo' %>
                      <i class="fas fa-check-circle"></i>Activo
                    <% when 'suspendido' %>
                      <i class="fas fa-user-clock"></i>Suspendido
                    <% when 'inabilitado' %>
                      <i class="fas fa-user-times"></i>Inhabilitado
                    <% end %>
                  </span>
                </span>
              </div>
            </div>
          </div>

          <!-- Información Académica/Profesional -->
          <div class="info-section-improved">
            <h3 class="section-title-improved">
              <i class="fas fa-graduation-cap"></i>
              Información Académica/Profesional
            </h3>
            
            <div class="info-content">
              <div class="info-row">
                <span class="info-label">Rol:</span>
                <span class="info-value">
                  <% if user.rol_principal %>
                    <span class="info-badge-improved">
                      <i class="fas fa-user-tag"></i>
                      <%= user.rol_principal %>
                    </span>
                  <% else %>
                    <span class="empty-value">Sin rol asignado</span>
                  <% end %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Ocupación:</span>
                <span class="info-value">
                  <%= user.occupation&.nombre || content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Facultad:</span>
                <span class="info-value">
                  <%= user.facultad.present? ? user.facultad : content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Procedencia:</span>
                <span class="info-value">
                  <%= user.proviene.present? ? user.proviene : content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Último Acceso:</span>
                <span class="info-value">
                  <%= user.ultimo_acceso&.strftime('%d/%m/%Y %H:%M') || content_tag(:span, 'Nunca', class: 'empty-value') %>
                </span>
              </div>
            </div>
          </div>

          <!-- Información Adicional -->
          <div class="info-section-improved">
            <h3 class="section-title-improved">
              <i class="fas fa-info-circle"></i>
              Información Adicional
            </h3>
            
            <div class="info-content">
              <div class="info-row">
                <span class="info-label">Descripción:</span>
                <span class="info-value">
                  <%= user.descripcion.present? ? user.descripcion : content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Miembros del Equipo:</span>
                <span class="info-value">
                  <%= user.cantidad_miembros_equipo.present? ? user.cantidad_miembros_equipo : content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Proyectos:</span>
                <span class="info-value">
                  <%= user.nombre_proyectos.present? ? user.nombre_proyectos : content_tag(:span, 'No especificado', class: 'empty-value') %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Creado:</span>
                <span class="info-value">
                  <%= user.created_at.strftime('%d/%m/%Y %H:%M') %>
                  <% if user.created_by %>
                    <br><small class="created-by">por <%= user.created_by.nombre_completo %></small>
                  <% end %>
                </span>
              </div>
              <div class="info-row">
                <span class="info-label">Última modificación:</span>
                <span class="info-value">
                  <%= user.updated_at.strftime('%d/%m/%Y %H:%M') %>
                  <% if user.updated_by %>
                    <br><small class="created-by">por <%= user.updated_by.nombre_completo %></small>
                  <% end %>
                </span>
              </div>
            </div>
          </div>
        </div>

        <!-- Acciones rápidas en el modal -->
        <div class="modal-actions-section-improved">
          <h4 class="actions-title-improved">
            <i class="fas fa-cogs"></i>
            Acciones Disponibles
          </h4>
          <div class="modal-actions-grid-improved">
            <%= link_to edit_admin_user_path(user), class: 'modal-action-btn-improved primary' do %>
              <i class="fas fa-edit"></i>
              Editar Usuario
            <% end %>
            
            <% unless user.activo? %>
              <%= button_to cambiar_estado_admin_user_path(user), 
                  method: :patch,
                  params: { estado: 'activo' },
                  data: { 
                    confirm: '¿Está seguro de activar este usuario?'
                  },
                  class: 'modal-action-btn-improved success',
                  style: 'background: none; border: none;' do %>
                <i class="fas fa-user-check"></i>
                Activar
              <% end %>
            <% end %>
            
            <% unless user.suspendido? %>
              <button type="button" class="modal-action-btn-improved warning" 
                      data-bs-toggle="modal" 
                      data-bs-target="#suspenderModal<%= user.id %>"
                      data-close-detail="showUserModal<%= user.id %>">
                <i class="fas fa-user-clock"></i>
                Suspender
              </button>
            <% end %>
            
            <% unless user.inabilitado? %>
              <%= button_to cambiar_estado_admin_user_path(user), 
                  method: :patch,
                  params: { estado: 'inabilitado' },
                  data: { 
                    confirm: '¿Está seguro de inhabilitar este usuario? Esta acción es permanente hasta que lo reactive manualmente.'
                  },
                  class: 'modal-action-btn-improved danger',
                  style: 'background: none; border: none;' do %>
                <i class="fas fa-user-times"></i>
                Inhabilitar
              <% end %>
            <% end %>
            
            <!-- Botón eliminar en el modal también -->
            <%= link_to admin_user_path(user), 
                        method: :delete,
                        data: { 
                          confirm: "⚠️ ¿Estás seguro de eliminar a #{user.nombre_completo}?\n\nEsta acción es IRREVERSIBLE y eliminará:\n• Toda la información del usuario\n• Sus roles y permisos\n• Su historial en el sistema\n\n¿Continuar?" 
                        },
                        class: 'modal-action-btn-improved danger' do %>
              <i class="fas fa-trash-alt"></i>
              Eliminar Usuario
            <% end %>
          </div>
        </div>
      </div>
      
      <!-- Footer del modal -->
      <div class="detail-modal-footer-improved">
        <button type="button" class="modal-btn-improved secondary modal-close-detail" data-modal="showUserModal<%= user.id %>">
          <i class="fas fa-times"></i>
          Cerrar
        </button>
        <%= link_to edit_admin_user_path(user), class: 'modal-btn-improved primary' do %>
          <i class="fas fa-edit"></i>
          Editar Usuario
        <% end %>
      </div>
    </div>
  </div>
</div>
<% end %>

<script>
// Función principal para inicializar la página
function initUserManagement() {
  initFilterDropdown();
  initEstadoDropdowns();
  initSuspensionModals();
  initDetailModals();
  initSearch();
  initGlobalKeyboardShortcuts();
  initDeleteConfirmation();
}

// Filtro de estado
function initFilterDropdown() {
  const filtroBtn = document.getElementById('filtroEstadoBtn');
  const filtroMenu = document.getElementById('filtroEstadoMenu');
  
  if (filtroBtn && filtroMenu) {
    filtroBtn.addEventListener('click', function(e) {
      e.stopPropagation();
      filtroMenu.classList.toggle('hidden');
    });
    
    document.addEventListener('click', function(e) {
      if (!filtroBtn.contains(e.target) && !filtroMenu.contains(e.target)) {
        filtroMenu.classList.add('hidden');
      }
    });
  }
}

// Dropdowns de estado en cada fila
function initEstadoDropdowns() {
  document.querySelectorAll('.estado-dropdown-btn').forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.stopPropagation();
      const menu = this.nextElementSibling;
      
      // Cerrar otros menús
      document.querySelectorAll('.estado-dropdown-menu').forEach(otherMenu => {
        if (otherMenu !== menu) {
          otherMenu.classList.add('hidden');
        }
      });
      
      // Toggle del menú actual
      menu.classList.toggle('hidden');
    });
  });

  // Cerrar dropdowns al hacer click fuera
  document.addEventListener('click', function(e) {
    if (!e.target.closest('.estado-dropdown-btn')) {
      document.querySelectorAll('.estado-dropdown-menu').forEach(menu => {
        menu.classList.add('hidden');
      });
    }
  });
}

// Gestión de modales de suspensión
function initSuspensionModals() {
  // Abrir modales de suspensión
  document.querySelectorAll('[data-bs-toggle="modal"][data-bs-target*="suspenderModal"]').forEach(trigger => {
    trigger.addEventListener('click', function(e) {
      e.preventDefault();
      const targetId = this.getAttribute('data-bs-target').substring(1);
      const modal = document.getElementById(targetId);
      const userId = targetId.replace('suspenderModal', '');
      const backdrop = document.getElementById('modalBackdrop' + userId);
      
      // Cerrar modal de detalles si está abierto
      const closeDetailModal = this.getAttribute('data-close-detail');
      if (closeDetailModal) {
        closeDetailModal(closeDetailModal);
      }
      
      if (modal && backdrop) {
        modal.classList.remove('hidden');
        backdrop.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
        
        // Focus en el primer input
        const firstInput = modal.querySelector('input[type="number"]');
        if (firstInput) {
          setTimeout(() => firstInput.focus(), 100);
        }
      }
    });
  });

  // Cerrar modales de suspensión
  document.querySelectorAll('.modal-close').forEach(closeBtn => {
    closeBtn.addEventListener('click', function() {
      const modalId = this.getAttribute('data-modal');
      const modal = document.getElementById(modalId);
      const userId = modalId.replace('suspenderModal', '');
      const backdrop = document.getElementById('modalBackdrop' + userId);
      
      if (modal && backdrop) {
        modal.classList.add('hidden');
        backdrop.classList.add('hidden');
        document.body.style.overflow = '';
      }
    });
  });

  // Cerrar modal al hacer click en el backdrop (solo suspensión)
  document.querySelectorAll('[id^="modalBackdrop"]').forEach(backdrop => {
    backdrop.addEventListener('click', function() {
      const userId = this.id.replace('modalBackdrop', '');
      const modalId = 'suspenderModal' + userId;
      const modal = document.getElementById(modalId);
      
      if (modal) {
        modal.classList.add('hidden');
        this.classList.add('hidden');
        document.body.style.overflow = '';
      }
    });
  });
}

// Gestión de modales de detalles (ACTUALIZADA PARA SOPORTAR AMBOS TIPOS)
function initDetailModals() {
  // Abrir modales de detalles
  document.querySelectorAll('[data-bs-toggle="modal"][data-bs-target*="showUserModal"]').forEach(trigger => {
    trigger.addEventListener('click', function(e) {
      e.preventDefault();
      const targetId = this.getAttribute('data-bs-target').substring(1);
      const modal = document.getElementById(targetId);
      const userId = targetId.replace('showUserModal', '');
      const backdrop = document.getElementById('detailsBackdrop' + userId);
      
      if (modal && backdrop) {
        modal.classList.remove('hidden');
        backdrop.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
        
        // Detectar tipo de modal y aplicar animación correspondiente
        const modalContentImproved = modal.querySelector('.detail-modal-content-improved');
        const modalContentOriginal = modal.querySelector('.detail-modal-content');
        
        if (modalContentImproved) {
          // Modal mejorado
          modalContentImproved.style.animation = 'slideInUpImproved 0.4s ease-out';
          setTimeout(() => {
            initSectionAnimationsImproved(modal);
          }, 200);
        } else if (modalContentOriginal) {
          // Modal original
          modalContentOriginal.style.animation = 'slideInUp 0.4s ease-out';
          setTimeout(() => {
            initSectionAnimations(modal);
          }, 200);
        }
      }
    });
  });

  // Cerrar modales de detalles (ACTUALIZADO PARA SOPORTAR AMBOS TIPOS)
  document.querySelectorAll('.modal-close-detail, .btn-close-detail, .btn-close-detail-improved').forEach(closeBtn => {
    closeBtn.addEventListener('click', function() {
      const modalId = this.getAttribute('data-modal');
      closeDetailModal(modalId);
    });
  });

  // Cerrar modal al hacer click en el backdrop (solo detalles)
  document.querySelectorAll('[id^="detailsBackdrop"]').forEach(backdrop => {
    backdrop.addEventListener('click', function() {
      const userId = this.id.replace('detailsBackdrop', '');
      const modalId = 'showUserModal' + userId;
      closeDetailModal(modalId);
    });
  });
}

// Función auxiliar actualizada para cerrar modales de detalles
function closeDetailModal(modalId) {
  const modal = document.getElementById(modalId);
  if (!modal) return;
  
  const userId = modalId.replace('showUserModal', '');
  const backdrop = document.getElementById('detailsBackdrop' + userId);
  
  if (modal && backdrop) {
    // Detectar tipo de modal y aplicar animación correspondiente
    const modalContentImproved = modal.querySelector('.detail-modal-content-improved');
    const modalContentOriginal = modal.querySelector('.detail-modal-content');
    
    if (modalContentImproved) {
      // Modal mejorado
      modalContentImproved.style.animation = 'slideOutDownImproved 0.3s ease-in';
    } else if (modalContentOriginal) {
      // Modal original
      modalContentOriginal.style.animation = 'slideOutDown 0.3s ease-in';
    }
    
    setTimeout(() => {
      modal.classList.add('hidden');
      backdrop.classList.add('hidden');
      document.body.style.overflow = '';
      if (modalContentImproved) {
        modalContentImproved.style.animation = '';
      } else if (modalContentOriginal) {
        modalContentOriginal.style.animation = '';
      }
    }, 300);
  }
}

// Animaciones escalonadas para las secciones del modal original
function initSectionAnimations(modal) {
  const sections = modal.querySelectorAll('.info-section');
  sections.forEach((section, index) => {
    section.style.opacity = '0';
    section.style.transform = 'translateY(20px)';
    section.style.transition = 'all 0.5s ease-out';
    
    setTimeout(() => {
      section.style.opacity = '1';
      section.style.transform = 'translateY(0)';
    }, index * 100);
  });
}

// Animaciones escalonadas para las secciones del modal mejorado
function initSectionAnimationsImproved(modal) {
  const sections = modal.querySelectorAll('.info-section-improved');
  sections.forEach((section, index) => {
    section.style.opacity = '0';
    section.style.transform = 'translateY(20px)';
    section.style.transition = 'all 0.5s ease-out';
    
    setTimeout(() => {
      section.style.opacity = '1';
      section.style.transform = 'translateY(0)';
    }, index * 150);
  });
}

// === FUNCIONES PARA CONFIRMACIÓN DE ELIMINACIÓN ===

// Función principal para manejar eliminación de usuarios
function initDeleteConfirmation() {
  // Interceptar todos los botones de eliminar
  document.querySelectorAll('.delete-user-btn').forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      const form = this.closest('form');
      if (!form) return;
      
      // Extraer el nombre del usuario desde el formulario o desde el HTML cercano
      const userRow = this.closest('tr');
      const userNameElement = userRow ? userRow.querySelector('.text-sm.font-medium.text-gray-900') : null;
      const userName = userNameElement ? userNameElement.textContent.trim() : 'este usuario';
      
      // Mostrar modal de confirmación personalizado
      showDeleteConfirmation(userName, () => {
        // Si confirma, enviar el formulario
        form.submit();
      });
    });
  });

  // También manejar los enlaces de eliminar en los modales de detalles (AMBOS TIPOS)
  document.querySelectorAll('a[href*="admin_user"][data-method="delete"], .modal-action-btn.danger[href*="admin_user"], .modal-action-btn-improved.danger[href*="admin_user"]').forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      const href = this.href;
      const confirmMessage = this.getAttribute('data-confirm');
      
      // Extraer nombre del usuario del mensaje de confirmación o del modal
      let userName = 'este usuario';
      if (confirmMessage) {
        const match = confirmMessage.match(/eliminar a (.+?)\?/);
        if (match) {
          userName = match[1];
        }
      }
      
      // Mostrar modal de confirmación personalizado
      showDeleteConfirmation(userName, () => {
        // Crear un formulario temporal para enviar la petición DELETE
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = href;
        form.style.display = 'none';
        
        // Agregar token CSRF
        const csrfToken = document.querySelector('meta[name="csrf-token"]');
        if (csrfToken) {
          const csrfInput = document.createElement('input');
          csrfInput.type = 'hidden';
          csrfInput.name = 'authenticity_token';
          csrfInput.value = csrfToken.content;
          form.appendChild(csrfInput);
        }
        
        // Agregar método DELETE
        const methodInput = document.createElement('input');
        methodInput.type = 'hidden';
        methodInput.name = '_method';
        methodInput.value = 'delete';
        form.appendChild(methodInput);
        
        document.body.appendChild(form);
        form.submit();
      });
    });
  });
}

// Función para mostrar el modal de confirmación personalizado
function showDeleteConfirmation(userName, onConfirm) {
  // Verificar si ya existe un modal de confirmación
  const existingModal = document.querySelector('.delete-confirmation-modal');
  if (existingModal) {
    existingModal.remove();
  }

  // Crear el modal
  const modal = document.createElement('div');
  modal.className = 'delete-confirmation-modal';
  modal.innerHTML = `
    <div class="delete-confirmation-content">
      <div class="delete-confirmation-header">
        <div class="delete-confirmation-icon">
          <i class="fas fa-exclamation-triangle"></i>
        </div>
        <h3 class="delete-confirmation-title">Eliminar Usuario</h3>
      </div>
      <div class="delete-confirmation-message">
        <p><strong>¿Estás seguro de eliminar a ${userName}?</strong></p>
        <p>Esta acción es <strong>IRREVERSIBLE</strong> y eliminará:</p>
        <ul style="margin: 0.75rem 0; padding-left: 1.5rem; color: #4b5563;">
          <li>Toda la información del usuario</li>
          <li>Sus roles y permisos</li>
          <li>Su historial en el sistema</li>
        </ul>
        <p style="color: #dc2626; font-weight: 500; margin-top: 1rem;">
          <i class="fas fa-exclamation-circle" style="margin-right: 0.5rem;"></i>
          Esta acción no se puede deshacer.
        </p>
      </div>
      <div class="delete-confirmation-actions">
        <button class="delete-btn-cancel" type="button">
          <i class="fas fa-times" style="margin-right: 0.5rem;"></i>Cancelar
        </button>
        <button class="delete-btn-confirm" type="button">
          <i class="fas fa-trash-alt" style="margin-right: 0.5rem;"></i>Sí, Eliminar
        </button>
      </div>
    </div>
  `;
  
  // Agregar al DOM
  document.body.appendChild(modal);
  document.body.style.overflow = 'hidden';
  
  // Añadir event listeners a los botones
  const cancelBtn = modal.querySelector('.delete-btn-cancel');
  const confirmBtn = modal.querySelector('.delete-btn-confirm');
  
  cancelBtn.addEventListener('click', closeDeleteConfirmation);
  confirmBtn.addEventListener('click', () => {
    onConfirm();
    closeDeleteConfirmation();
  });
  
  // Cerrar al hacer click en el fondo del modal
  modal.addEventListener('click', function(e) {
    if (e.target === modal) {
      closeDeleteConfirmation();
    }
  });
  
  // Guardar la función de confirmación para uso global si es necesario
  window.currentDeleteConfirm = onConfirm;
  
  // Añadir listener para tecla Escape
  document.addEventListener('keydown', handleDeleteEscape);
  
  // Aplicar animación de entrada
  setTimeout(() => {
    modal.style.opacity = '1';
    const content = modal.querySelector('.delete-confirmation-content');
    if (content) {
      content.style.transform = 'translateY(0) scale(1)';
    }
  }, 10);
}

// Función para cerrar el modal de confirmación
function closeDeleteConfirmation() {
  const modal = document.querySelector('.delete-confirmation-modal');
  if (modal) {
    // Animación de salida
    modal.style.opacity = '0';
    const content = modal.querySelector('.delete-confirmation-content');
    if (content) {
      content.style.transform = 'translateY(-20px) scale(0.95)';
    }
    
    setTimeout(() => {
      modal.remove();
    }, 200);
  }
  
  document.body.style.overflow = '';
  document.removeEventListener('keydown', handleDeleteEscape);
  window.currentDeleteConfirm = null;
}

// Manejar tecla Escape para cerrar modal de eliminación
function handleDeleteEscape(e) {
  if (e.key === 'Escape') {
    closeDeleteConfirmation();
  }
}

// === FIN DE FUNCIONES DE ELIMINACIÓN ===

// Cerrar todos los modales con Escape
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    // Cerrar modales de suspensión
    document.querySelectorAll('.modal:not(.hidden)').forEach(modal => {
      if (modal.id.includes('suspenderModal')) {
        const userId = modal.id.replace('suspenderModal', '');
        const backdrop = document.getElementById('modalBackdrop' + userId);
        
        modal.classList.add('hidden');
        if (backdrop) backdrop.classList.add('hidden');
        document.body.style.overflow = '';
      }
    });
    
    // Cerrar modales de detalles
    document.querySelectorAll('.modal:not(.hidden)').forEach(modal => {
      if (modal.id.includes('showUserModal')) {
        closeDetailModal(modal.id);
      }
    });
  }
});

// Búsqueda en tiempo real
let searchTimeout;
function initSearch() {
  const searchInput = document.getElementById('search-input');
  if (!searchInput) return;

  searchInput.addEventListener('input', function(e) {
    clearTimeout(searchTimeout);
    const query = e.target.value.trim();
    
    if (query === '') {
      doSearch('');
      return;
    }
    
    searchTimeout = setTimeout(() => {
      doSearch(query);
    }, 500);
  });

  searchInput.addEventListener('keydown', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      clearTimeout(searchTimeout);
      doSearch(e.target.value.trim());
    }
    
    if (e.key === 'Escape') {
      e.target.blur();
      if (e.target.value.trim() !== '') {
        doSearch('');
      }
    }
  });
}

function doSearch(query) {
  const url = new URL(window.location.href);
  
  if (query === '') {
    url.searchParams.delete('search');
  } else {
    url.searchParams.set('search', query);
  }
  
  const currentEstado = getUrlParameter('estado');
  if (currentEstado) {
    url.searchParams.set('estado', currentEstado);
  }
  
  window.location.href = url.toString();
}

function getUrlParameter(name) {
  const urlParams = new URLSearchParams(window.location.search);
  return urlParams.get(name);
}

// Atajos de teclado
function initGlobalKeyboardShortcuts() {
  document.addEventListener('keydown', function(event) {
    // Ctrl/Cmd + K para enfocar búsqueda
    if ((event.ctrlKey || event.metaKey) && event.key === 'k') {
      event.preventDefault();
      const searchInput = document.getElementById('search-input');
      if (searchInput) {
        searchInput.focus();
        searchInput.select();
      }
    }
    
    // Ctrl/Cmd + N para nuevo usuario (si no hay modales abiertos)
    if ((event.ctrlKey || event.metaKey) && event.key === 'n') {
      const openModals = document.querySelectorAll('.modal:not(.hidden)');
      const deleteModal = document.querySelector('.delete-confirmation-modal');
      if (openModals.length === 0 && !deleteModal) {
        event.preventDefault();
        const createBtn = document.querySelector('a[href*="new_admin_user"]');
        if (createBtn) {
          window.location.href = createBtn.href;
        }
      }
    }
  });
}

// Auto-ocultar mensajes flash
function initFlashMessages() {
  setTimeout(function() {
    const flashMessages = document.querySelectorAll('.animate-fade-in');
    flashMessages.forEach(function(message) {
      message.style.transition = 'opacity 0.5s, transform 0.5s';
      message.style.opacity = '0';
      message.style.transform = 'translateY(-10px)';
      
      setTimeout(function() {
        message.remove();
      }, 500);
    });
  }, 5000);
}

// Validación en tiempo real del formulario de suspensión
function initSuspensionValidation() {
  document.addEventListener('input', function(e) {
    if (e.target && e.target.name === 'horas_suspension') {
      const value = parseInt(e.target.value);
      const form = e.target.closest('form');
      const submitBtn = form ? form.querySelector('input[type="submit"], .modal-btn.primary') : null;
      
      if (value && value >= 1 && value <= 8760) {
        e.target.style.borderColor = '#10b981';
        e.target.style.boxShadow = '0 0 0 3px rgba(16, 185, 129, 0.1)';
        if (submitBtn) submitBtn.disabled = false;
      } else {
        e.target.style.borderColor = '#ef4444';
        e.target.style.boxShadow = '0 0 0 3px rgba(239, 68, 68, 0.1)';
        if (submitBtn) submitBtn.disabled = true;
      }
    }
  });
}

// Efectos hover mejorados para botones de acción en modales (AMBOS TIPOS)
function initModalActionEffects() {
  document.addEventListener('mouseenter', function(e) {
    if (e.target.matches('.modal-action-btn, .modal-action-btn-improved')) {
      e.target.style.transform = 'translateY(-2px) scale(1.02)';
    }
  }, true);
  
  document.addEventListener('mouseleave', function(e) {
    if (e.target.matches('.modal-action-btn, .modal-action-btn-improved')) {
      e.target.style.transform = 'translateY(0) scale(1)';
    }
  }, true);
}

// Mejorar la experiencia de scroll en modales largos (AMBOS TIPOS)
function initModalScrollBehavior() {
  // Modal original
  document.querySelectorAll('.detail-modal-content').forEach(modal => {
    const modalBody = modal.querySelector('.detail-modal-body');
    const header = modal.querySelector('.detail-modal-header');
    
    if (modalBody && header) {
      modalBody.addEventListener('scroll', function() {
        const scrollTop = this.scrollTop;
        
        if (scrollTop > 20) {
          header.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.1)';
        } else {
          header.style.boxShadow = 'none';
        }
      });
    }
  });

  // Modal mejorado
  document.querySelectorAll('.detail-modal-content-improved').forEach(modal => {
    const modalBody = modal.querySelector('.detail-modal-body-improved');
    const header = modal.querySelector('.detail-modal-header-improved');
    
    if (modalBody && header) {
      modalBody.addEventListener('scroll', function() {
        const scrollTop = this.scrollTop;
        
        if (scrollTop > 20) {
          header.style.boxShadow = '0 4px 20px rgba(59, 130, 246, 0.15)';
        } else {
          header.style.boxShadow = 'none';
        }
      });
    }
  });
}

// Gestión de múltiples modales - evitar conflictos
function handleModalConflicts() {
  // Si se abre un modal de suspensión desde el modal de detalles
  document.querySelectorAll('[data-close-detail]').forEach(btn => {
    btn.addEventListener('click', function() {
      const detailModalId = this.getAttribute('data-close-detail');
      if (detailModalId) {
        // Cerrar modal de detalles antes de abrir el de suspensión
        setTimeout(() => {
          closeDetailModal(detailModalId);
        }, 100);
      }
    });
  });
}

// Función de utilidad para debug
function debugModalState() {
  const visibleModals = document.querySelectorAll('.modal:not(.hidden)');
  const visibleBackdrops = document.querySelectorAll('.modal-backdrop:not(.hidden)');
  const deleteModal = document.querySelector('.delete-confirmation-modal');
  
  console.log('Modales visibles:', visibleModals.length);
  console.log('Backdrops visibles:', visibleBackdrops.length);
  console.log('Modal de eliminación:', deleteModal ? 'visible' : 'oculto');
  console.log('Body overflow:', document.body.style.overflow);
}

// Función para detectar y corregir estados inconsistentes
function fixModalStates() {
  // Si hay backdrops visibles pero ningún modal
  const visibleBackdrops = document.querySelectorAll('.modal-backdrop:not(.hidden)');
  const visibleModals = document.querySelectorAll('.modal:not(.hidden)');
  const deleteModal = document.querySelector('.delete-confirmation-modal');
  
  if (visibleBackdrops.length > 0 && visibleModals.length === 0 && !deleteModal) {
    visibleBackdrops.forEach(backdrop => backdrop.classList.add('hidden'));
    document.body.style.overflow = '';
  }
}

// Añadir CSS para animaciones del modal mejorado si no existe
function ensureImprovedModalAnimations() {
  if (!document.querySelector('#improved-modal-animations')) {
    const style = document.createElement('style');
    style.id = 'improved-modal-animations';
    style.textContent = `
      @keyframes slideInUpImproved {
        from {
          opacity: 0;
          transform: translateY(30px) scale(0.95);
        }
        to {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }
      
      @keyframes slideOutDownImproved {
        from {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
        to {
          opacity: 0;
          transform: translateY(30px) scale(0.95);
        }
      }
    `;
    document.head.appendChild(style);
  }
}

// Inicializar todo cuando la página esté lista
document.addEventListener('DOMContentLoaded', function() {
  ensureImprovedModalAnimations();
  initUserManagement();
  initFlashMessages();
  initSuspensionValidation();
  initModalActionEffects();
  initModalScrollBehavior();
  handleModalConflicts();
});

// También ejecutar después de cada carga con Turbo
document.addEventListener('turbo:load', function() {
  ensureImprovedModalAnimations();
  initUserManagement();
  initFlashMessages();
  initSuspensionValidation();
  initModalActionEffects();
  initModalScrollBehavior();
  handleModalConflicts();
});

// Por si el documento ya está cargado
if (document.readyState === 'interactive' || document.readyState === 'complete') {
  ensureImprovedModalAnimations();
  initUserManagement();
  initFlashMessages();
  initSuspensionValidation();
  initModalActionEffects();
  initModalScrollBehavior();
  handleModalConflicts();
}

// Limpiar timeouts al salir de la página
window.addEventListener('beforeunload', function() {
  if (searchTimeout) {
    clearTimeout(searchTimeout);
  }
  // Limpiar modal de eliminación si existe
  const deleteModal = document.querySelector('.delete-confirmation-modal');
  if (deleteModal) {
    deleteModal.remove();
  }
});

// Ejecutar corrección periódicamente
setInterval(fixModalStates, 5000);
</script>