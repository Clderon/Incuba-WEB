<!-- views/admin/users/edit.html.erb -->

<style>
/* === ESTILOS ACTUALIZADOS BASADOS EN EL DISEÑO DE EVENTOS === */

/* Contenedor principal del formulario mejorado */
.form-container {
  background-color: #ffffff;
  border-radius: 0.75rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  border: 1px solid #e5e7eb;
}

/* Header mejorado con gradiente azul para coincidir con modales */
.form-header {
  background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%);
  color: white;
  padding: 2rem;
  border-bottom: 1px solid #e5e7eb;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  overflow: hidden;
}

/* Efectos decorativos en el header */
.form-header::before {
  content: '';
  position: absolute;
  top: -50px;
  right: -50px;
  width: 100px;
  height: 100px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
}

.form-header::after {
  content: '';
  position: absolute;
  bottom: -30px;
  left: -30px;
  width: 80px;
  height: 80px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 50%;
}

.form-title {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 0;
  display: flex;
  align-items: center;
  position: relative;
  z-index: 2;
}

.form-title i {
  margin-right: 1rem;
  font-size: 1.5rem;
  opacity: 0.9;
}

/* Badge de estado mejorado */
.status-badge {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  position: relative;
  z-index: 2;
}

.status-badge.activo {
  background-color: rgba(255, 255, 255, 0.2);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.3);
}

.status-badge.suspendido {
  background-color: rgba(245, 158, 11, 0.9);
  color: white;
  border: 1px solid rgba(245, 158, 11, 1);
}

.status-badge.inabilitado {
  background-color: rgba(239, 68, 68, 0.9);
  color: white;
  border: 1px solid rgba(239, 68, 68, 1);
}

/* Body del formulario */
.form-body {
  padding: 2rem;
}

/* Secciones del formulario mejoradas */
.form-section {
  margin-bottom: 2rem;
  padding: 1.5rem;
  background-color: #f8fafc;
  border-radius: 0.75rem;
  border: 1px solid #e2e8f0;
  transition: all 0.3s ease;
}

.form-section:hover {
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.1);
  border-color: #3b82f6;
  transform: translateY(-1px);
}

/* Títulos de sección mejorados */
.section-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: #1e293b;
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding-bottom: 0.75rem;
  border-bottom: 2px solid #e2e8f0;
}

.section-title i {
  color: #3b82f6;
  font-size: 1.125rem;
}

/* Grupos de formulario */
.form-group {
  margin-bottom: 1.5rem;
}

/* Etiquetas de formulario mejoradas */
.form-label {
  display: block;
  font-size: 0.875rem;
  font-weight: 600;
  color: #374151;
  margin-bottom: 0.5rem;
  transition: color 0.2s ease;
}

.form-label.required::after {
  content: " *";
  color: #ef4444;
  font-weight: 700;
}

/* Controles de formulario mejorados */
.form-control {
  display: block;
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  line-height: 1.5;
  color: #111827;
  background-color: #ffffff;
  border: 2px solid #e5e7eb;
  border-radius: 0.5rem;
  transition: all 0.2s ease;
}

.form-control:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  transform: translateY(-1px);
}

.form-control:hover:not(:focus):not(:disabled) {
  border-color: #9ca3af;
}

.form-control:disabled {
  background-color: #f9fafb;
  color: #6b7280;
  opacity: 0.7;
}

/* Selects mejorados */
.form-select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%233b82f6' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 1rem center;
  background-repeat: no-repeat;
  background-size: 1.25em 1.25em;
  padding-right: 3rem;
  appearance: none;
}

.form-select:focus {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%231e40af' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
}

/* Textarea mejorado */
.form-textarea {
  resize: vertical;
  min-height: 100px;
  font-family: inherit;
}

/* Texto de ayuda mejorado */
.help-text {
  font-size: 0.75rem;
  color: #6b7280;
  margin-top: 0.5rem;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.help-text i {
  color: #3b82f6;
}

/* Alertas mejoradas */
.alert {
  padding: 1.25rem;
  border-radius: 0.75rem;
  margin-bottom: 1.5rem;
  border: 1px solid;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.alert-danger {
  background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
  border-color: #fca5a5;
  color: #991b1b;
}

.alert-warning {
  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
  border-color: #f59e0b;
  color: #92400e;
}

.alert-title {
  font-weight: 700;
  margin: 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 1rem;
}

.alert-title i {
  font-size: 1.125rem;
}

.alert-list {
  margin: 0;
  padding-left: 1.5rem;
  list-style-type: disc;
}

.alert-list li {
  margin-bottom: 0.25rem;
}

/* Información de auditoría mejorada */
.audit-info {
  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin-top: 2rem;
  border: 1px solid #cbd5e1;
}

.audit-title {
  font-size: 1rem;
  font-weight: 600;
  color: #475569;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.audit-title i {
  color: #3b82f6;
}

.audit-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
}

.audit-item {
  background-color: white;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid #e2e8f0;
  transition: all 0.2s ease;
}

.audit-item:hover {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  transform: translateY(-1px);
}

.audit-label {
  font-size: 0.75rem;
  font-weight: 600;
  color: #64748b;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-bottom: 0.5rem;
}

.audit-value {
  font-size: 0.875rem;
  color: #1e293b;
  font-weight: 500;
}

.audit-value small {
  display: block;
  font-size: 0.75rem;
  color: #64748b;
  font-weight: 400;
  margin-top: 0.25rem;
}

/* Grupo de botones mejorado */
.btn-group {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 2rem;
  padding-top: 2rem;
  border-top: 2px solid #e5e7eb;
  gap: 1rem;
}

.btn-group-right {
  display: flex;
  gap: 1rem;
}

/* Botones mejorados */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.875rem 1.75rem;
  font-size: 0.875rem;
  font-weight: 600;
  border-radius: 0.5rem;
  transition: all 0.2s ease;
  text-decoration: none;
  cursor: pointer;
  border: 2px solid transparent;
  position: relative;
  overflow: hidden;
}

.btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  transition: left 0.5s ease;
}

.btn:hover::before {
  left: 100%;
}

.btn-primary {
  background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%);
  color: white;
  border-color: #3b82f6;
}

.btn-primary:hover {
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 15px rgba(59, 130, 246, 0.3);
}

.btn-secondary {
  background-color: #f8fafc;
  color: #4b5563;
  border-color: #d1d5db;
}

.btn-secondary:hover {
  background-color: #e5e7eb;
  color: #374151;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.btn-info {
  background: linear-gradient(135deg, #0ea5e9 0%, #0284c7 100%);
  color: white;
  border-color: #0ea5e9;
}

.btn-info:hover {
  background: linear-gradient(135deg, #0284c7 0%, #0369a1 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 15px rgba(14, 165, 233, 0.3);
}

.btn i {
  font-size: 0.875rem;
}

/* Layout mejorado */
.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -1rem;
}

.col-md-6 {
  flex: 0 0 auto;
  width: 50%;
  padding: 0 1rem;
}

.col-md-12 {
  flex: 0 0 auto;
  width: 100%;
  padding: 0 1rem;
}

/* Divisor de sección */
.section-divider {
  margin: 2rem 0;
  border: none;
  border-top: 2px solid #e5e7eb;
}

/* Estados de validación mejorados */
.form-control.is-invalid {
  border-color: #ef4444;
  background-color: #fef2f2;
}

.form-control.is-invalid:focus {
  border-color: #dc2626;
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

.form-control.is-valid {
  border-color: #10b981;
  background-color: #f0fdf4;
}

.form-control.is-valid:focus {
  border-color: #059669;
  box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
}

/* Responsive mejorado */
@media (max-width: 768px) {
  .col-md-6 {
    width: 100%;
  }
  
  .form-body {
    padding: 1.5rem;
  }
  
  .form-header {
    padding: 1.5rem;
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
    text-align: center;
  }
  
  .form-title {
    font-size: 1.5rem;
    justify-content: center;
  }
  
  .btn-group {
    flex-direction: column;
    gap: 1rem;
  }
  
  .btn-group-right {
    width: 100%;
    flex-direction: column;
  }
  
  .btn {
    width: 100%;
    justify-content: center;
  }
  
  .audit-grid {
    grid-template-columns: 1fr;
  }
  
  .section-title {
    font-size: 1.125rem;
  }
  
  .form-section {
    padding: 1rem;
  }
}

/* Animaciones mejoradas */
.form-container {
  animation: slideInUp 0.4s ease-out;
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.form-section {
  animation: fadeInStagger 0.5s ease-out forwards;
  opacity: 0;
}

.form-section:nth-child(1) { animation-delay: 0.1s; }
.form-section:nth-child(2) { animation-delay: 0.2s; }
.form-section:nth-child(3) { animation-delay: 0.3s; }

@keyframes fadeInStagger {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Efectos especiales */
.form-control:focus + .form-label,
.form-control:not(:placeholder-shown) + .form-label {
  color: #3b82f6;
}

/* Mejoras de accesibilidad */
.form-control:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

/* Indicador de cambios no guardados */
.btn-warning {
  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
  color: white;
  border-color: #f59e0b;
}

.btn-warning:hover {
  background: linear-gradient(135deg, #d97706 0%, #b45309 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 15px rgba(245, 158, 11, 0.3);
}

/* Contenedor principal ajustado */
.container-fluid {
  padding: 2rem 1rem;
}

.container-fluid .row {
  margin: 0;
}

.container-fluid .col-md-8 {
  flex: 0 0 auto;
  width: 66.666667%;
}

.container-fluid .offset-md-2 {
  margin-left: 16.666667%;
}

@media (max-width: 768px) {
  .container-fluid .col-md-8,
  .container-fluid .offset-md-2 {
    width: 100%;
    margin-left: 0;
  }
  
  .container-fluid {
    padding: 1rem 0.5rem;
  }
}

/* Estados hover para elementos interactivos */
.audit-item:hover .audit-label {
  color: #3b82f6;
}

.form-group:hover .form-label {
  color: #1e40af;
}

/* Scroll suave para elementos con errores */
.form-control.is-invalid {
  scroll-margin-top: 100px;
}
</style>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-8 offset-md-2">
      <div class="form-container">
        <div class="form-header">
          <h4 class="form-title">
            <i class="fas fa-user-edit"></i>
            Editar Usuario: <%= @user.nombre_completo %>
          </h4>
          <span class="status-badge <%= @user.estado %>">
            <% case @user.estado %>
            <% when 'activo' %>
              <i class="fas fa-check-circle mr-1"></i>Activo
            <% when 'suspendido' %>
              <i class="fas fa-user-clock mr-1"></i>Suspendido
            <% when 'inabilitado' %>
              <i class="fas fa-user-times mr-1"></i>Inhabilitado
            <% end %>
          </span>
        </div>
        
        <div class="form-body">
          <%= form_with model: [:admin, @user], local: true do |form| %>
            <% if @user.errors.any? %>
              <div class="alert alert-danger">
                <h6 class="alert-title">
                  <i class="fas fa-exclamation-triangle"></i>
                  <%= pluralize(@user.errors.count, "error") %> impidió que el usuario fuera actualizado:
                </h6>
                <ul class="alert-list">
                  <% @user.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            <% end %>

            <!-- Información de suspensión si aplica -->
            <% if @user.suspendido? && @user.suspension_until %>
              <div class="alert alert-warning">
                <h6 class="alert-title">
                  <i class="fas fa-user-clock"></i>
                  Usuario Suspendido
                </h6>
                <p class="mb-1">Hasta: <%= @user.suspension_until.strftime('%d/%m/%Y %H:%M') %></p>
                <p class="mb-0">Tiempo restante: <%= @user.tiempo_restante_suspension %> horas</p>
              </div>
            <% end %>

            <div class="row">
              <!-- Información Personal -->
              <div class="col-md-6">
                <h5 class="section-title">
                  <i class="fas fa-user"></i>
                  Información Personal
                </h5>
                
                <div class="form-group">
                  <%= form.label :nombre, class: 'form-label required' %>
                  <%= form.text_field :nombre, class: 'form-control' %>
                </div>

                <div class="form-group">
                  <%= form.label :apellido, class: 'form-label required' %>
                  <%= form.text_field :apellido, class: 'form-control' %>
                </div>

                <div class="form-group">
                  <%= form.label :email, class: 'form-label required' %>
                  <%= form.email_field :email, class: 'form-control' %>
                </div>

                <div class="form-group">
                  <%= form.label :dni, 'DNI', class: 'form-label' %>
                  <%= form.text_field :dni, class: 'form-control' %>
                </div>

                <div class="form-group">
                  <%= form.label :telefono, 'Teléfono', class: 'form-label' %>
                  <%= form.text_field :telefono, class: 'form-control' %>
                </div>

                <div class="form-group">
                  <%= form.label :estado, class: 'form-label' %>
                  <%= form.select :estado, 
                      options_for_select([
                        ['Activo', 'activo'],
                        ['Suspendido', 'suspendido'],
                        ['Inabilitado', 'inabilitado']
                      ], @user.estado),
                      {},
                      { class: 'form-control form-select' } %>
                  <small class="help-text">
                    <i class="fas fa-info-circle mr-1"></i>
                    Cambios de estado se reflejarán inmediatamente
                  </small>
                </div>
              </div>

              <!-- Información Académica/Profesional -->
              <div class="col-md-6">
                <h5 class="section-title">
                  <i class="fas fa-graduation-cap"></i>
                  Información Académica/Profesional
                </h5>
                
                <div class="form-group">
                  <%= label_tag :role_id, 'Rol', class: 'form-label' %>
                  <%= select_tag :role_id, 
                      options_from_collection_for_select(@roles, :id, :nombre, @user_role&.role_id), 
                      { prompt: 'Seleccionar rol...', class: 'form-control form-select' } %>
                </div>

                <div class="form-group">
                  <%= form.label :occupation_id, 'Ocupación', class: 'form-label' %>
                  <%= form.collection_select :occupation_id, @occupations, :id, :nombre, 
                      { prompt: 'Seleccionar ocupación...' }, { class: 'form-control form-select' } %>
                </div>

                <div class="form-group">
                  <%= form.label :facultad, class: 'form-label' %>
                  <%= form.text_field :facultad, class: 'form-control' %>
                </div>

                <div class="form-group">
                  <%= form.label :proviene, 'Procedencia', class: 'form-label' %>
                  <%= form.text_field :proviene, class: 'form-control' %>
                </div>
              </div>
            </div>

            <hr class="section-divider">

            <!-- Información Adicional -->
            <div class="row">
              <div class="col-md-12">
                <h5 class="section-title">
                  <i class="fas fa-info-circle"></i>
                  Información Adicional
                </h5>
                
                <div class="form-group">
                  <%= form.label :descripcion, 'Descripción', class: 'form-label' %>
                  <%= form.text_area :descripcion, class: 'form-control form-textarea', rows: 3 %>
                </div>

                <div class="row">
                  <div class="col-md-6">
                    <div class="form-group">
                      <%= form.label :cantidad_miembros_equipo, 'Cantidad de Miembros del Equipo', class: 'form-label' %>
                      <%= form.number_field :cantidad_miembros_equipo, class: 'form-control', min: 1 %>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="form-group">
                      <%= form.label :nombre_proyectos, 'Nombre de Proyectos', class: 'form-label' %>
                      <%= form.text_field :nombre_proyectos, class: 'form-control' %>
                    </div>
                  </div>
                </div>

                <!-- Información de auditoría -->
                <div class="audit-info">
                  <h6 class="audit-title">
                    <i class="fas fa-history"></i>
                    Información de Auditoría
                  </h6>
                  <div class="audit-grid">
                    <div class="audit-item">
                      <div class="audit-label">Creado</div>
                      <div class="audit-value">
                        <%= @user.created_at.strftime('%d/%m/%Y %H:%M') %>
                        <% if @user.created_by %>
                          <small>por <%= @user.created_by.nombre_completo %></small>
                        <% end %>
                      </div>
                    </div>
                    <div class="audit-item">
                      <div class="audit-label">Última modificación</div>
                      <div class="audit-value">
                        <%= @user.updated_at.strftime('%d/%m/%Y %H:%M') %>
                        <% if @user.updated_by %>
                          <small>por <%= @user.updated_by.nombre_completo %></small>
                        <% end %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div class="btn-group">
              <%= link_to admin_users_path, class: 'btn btn-secondary' do %>
                <i class="fas fa-arrow-left"></i>
                Volver
              <% end %>
              <div class="btn-group-right">
                <%= link_to admin_user_path(@user), class: 'btn btn-info' do %>
                  <i class="fas fa-eye"></i>
                  Ver Usuario
                <% end %>
                <%= form.submit 'Actualizar Usuario', class: 'btn btn-primary' %>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Validación en tiempo real
  const form = document.querySelector('form');
  const requiredFields = form.querySelectorAll('input[required], select[required]');
  
  requiredFields.forEach(field => {
    field.addEventListener('blur', function() {
      validateField(this);
    });
    
    field.addEventListener('input', function() {
      if (this.classList.contains('is-invalid')) {
        validateField(this);
      }
    });
  });
  
  function validateField(field) {
    if (field.value.trim() === '') {
      field.classList.add('is-invalid');
      field.classList.remove('is-valid');
    } else {
      field.classList.remove('is-invalid');
      field.classList.add('is-valid');
    }
  }
  
  // Validación del email
  const emailField = document.querySelector('input[type="email"]');
  if (emailField) {
    emailField.addEventListener('blur', function() {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (this.value && !emailRegex.test(this.value)) {
        this.classList.add('is-invalid');
        this.classList.remove('is-valid');
      } else if (this.value) {
        this.classList.remove('is-invalid');
        this.classList.add('is-valid');
      }
    });
  }
  
  // Advertencia para cambios de estado críticos
  const estadoSelect = document.querySelector('select[name="user[estado]"]');
  if (estadoSelect) {
    estadoSelect.addEventListener('change', function() {
      const newValue = this.value;
      const userName = '<%= @user.nombre_completo %>';
      
      if (newValue === 'inabilitado') {
        if (!confirm(`¿Está seguro de inhabilitar a ${userName}? Esta acción restringirá completamente el acceso hasta reactivación manual.`)) {
          this.value = '<%= @user.estado %>';
          return;
        }
      } else if (newValue === 'suspendido') {
        alert('Nota: Para suspensión temporal específica, use la opción "Suspender" en la lista de usuarios.');
      }
    });
  }
  
  // Validación antes del envío
  form.addEventListener('submit', function(e) {
    let hasErrors = false;
    
    // Verificar campos requeridos
    requiredFields.forEach(field => {
      if (field.value.trim() === '') {
        field.classList.add('is-invalid');
        hasErrors = true;
      }
    });
    
    // Verificar email válido
    if (emailField && emailField.value) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(emailField.value)) {
        emailField.classList.add('is-invalid');
        hasErrors = true;
      }
    }
    
    if (hasErrors) {
      e.preventDefault();
      alert('Por favor, complete todos los campos requeridos correctamente.');
      return false;
    }
  });
  
  // Mejorar UX de los selects
  const selects = document.querySelectorAll('select');
  selects.forEach(select => {
    select.addEventListener('change', function() {
      if (this.value !== '') {
        this.classList.remove('is-invalid');
        this.classList.add('is-valid');
      }
    });
  });
  
  // Highlight de cambios no guardados
  let originalFormData = new FormData(form);
  let hasUnsavedChanges = false;
  
  form.addEventListener('input', function() {
    const currentFormData = new FormData(form);
    hasUnsavedChanges = false;
    
    for (let [key, value] of currentFormData.entries()) {
      if (originalFormData.get(key) !== value) {
        hasUnsavedChanges = true;
        break;
      }
    }
    
    // Mostrar indicador visual si hay cambios
    const submitBtn = form.querySelector('input[type="submit"]');
    if (hasUnsavedChanges) {
      submitBtn.classList.add('btn-warning');
      submitBtn.classList.remove('btn-primary');
      submitBtn.value = 'Guardar Cambios *';
    } else {
      submitBtn.classList.remove('btn-warning');
      submitBtn.classList.add('btn-primary');
      submitBtn.value = 'Actualizar Usuario';
    }
  });
  
  // Advertencia antes de salir con cambios no guardados
  window.addEventListener('beforeunload', function(e) {
    if (hasUnsavedChanges) {
      e.preventDefault();
      e.returnValue = '¿Está seguro de que desea salir? Los cambios no guardados se perderán.';
      return e.returnValue;
    }
  });
  
  // Remover advertencia al enviar el formulario
  form.addEventListener('submit', function() {
    hasUnsavedChanges = false;
  });
});
</script>