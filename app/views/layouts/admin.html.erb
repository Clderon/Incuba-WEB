<!DOCTYPE html>
<html>
<head>
  <title>Panel Admin - Incuba UNAS</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  

  <!-- Javascript de la aplicación -->
  <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true, type: "module" %>

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <!--Para el uso de SweetAlert2 para confirmaciones -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <!-- CSS plano de Tailwind directamente en el HTML -->
  <style>
/* ===== ESTILOS BASE DE TAILWIND ===== */
*, ::before, ::after {
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
  border-color: #e5e7eb;
}

html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  -moz-tab-size: 4;
  tab-size: 4;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

body {
  margin: 0;
  line-height: inherit;
}

/* ===== UTILIDADES DE FLEXBOX ===== */
.flex { display: flex; }
.flex-1 { flex: 1 1 0%; }
.flex-shrink-0 { flex-shrink: 0; }
.flex-col { flex-direction: column; }
.items-center { align-items: center; }
.items-start { align-items: flex-start; }
.justify-between { justify-content: space-between; }
.justify-center { justify-content: center; }

/* ===== UTILIDADES DE ESPACIADO ===== */
.p-1 { padding: 0.25rem; }
.p-2 { padding: 0.5rem; }
.p-3 { padding: 0.75rem; }
.p-4 { padding: 1rem; }
.p-5 { padding: 1.25rem; }
.p-6 { padding: 1.5rem; }

.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }
.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }
.py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.pr-8 { padding-right: 2rem; }
.pl-12 { padding-left: 3rem; }

.mt-1 { margin-top: 0.25rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-3 { margin-top: 0.75rem; }
.mt-4 { margin-top: 1rem; }
.mt-6 { margin-top: 1.5rem; }

.mb-1 { margin-bottom: 0.25rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-6 { margin-bottom: 1.5rem; }
.mb-8 { margin-bottom: 2rem; }

.mr-1 { margin-right: 0.25rem; }
.mr-2 { margin-right: 0.5rem; }
.mr-3 { margin-right: 0.75rem; }

.ml-1 { margin-left: 0.25rem; }
.ml-2 { margin-left: 0.5rem; }
.ml-3 { margin-left: 0.75rem; }

.space-x-4 > * + * { margin-left: 1rem; }
.space-y-0 > * + * { margin-top: 0; }

/* ===== UTILIDADES DE TAMAÑOS ===== */
.w-4 { width: 1rem; }
.w-5 { width: 1.25rem; }
.w-6 { width: 1.5rem; }
.w-9 { width: 2.25rem; }
.w-12 { width: 3rem; }
.w-48 { width: 12rem; }
.w-64 { width: 16rem; }

.h-4 { height: 1rem; }
.h-5 { height: 1.25rem; }
.h-6 { height: 1.5rem; }
.h-9 { height: 2.25rem; }
.h-12 { height: 3rem; }
.h-64 { height: 16rem; }
.h-screen { height: 100vh; }
.min-h-screen { min-height: 100vh; }

/* ===== UTILIDADES DE BORDES ===== */
.border { border-width: 1px; }
.border-b { border-bottom-width: 1px; }
.border-blue-700 { border-color: #1d4ed8; }

.rounded { border-radius: 0.25rem; }
.rounded-lg { border-radius: 0.5rem; }
.rounded-md { border-radius: 0.375rem; }
.rounded-full { border-radius: 9999px; }

/* ===== UTILIDADES DE COLORES DE FONDO ===== */
.bg-blue-100 { background-color: #dbeafe; }
.bg-blue-600 { background-color: #2563eb; }
.bg-blue-700 { background-color: #1d4ed8; }
.bg-blue-800 { background-color: #1e40af; }
.bg-green-100 { background-color: #dcfce7; }
.bg-green-600 { background-color: #16a34a; }
.bg-gray-50 { background-color: #f9fafb; }
.bg-gray-100 { background-color: #f3f4f6; }
.bg-white { background-color: #ffffff; }
.bg-red-100 { background-color: #fee2e2; }
.bg-red-500 { background-color: #ef4444; }
.bg-yellow-100 { background-color: #fef3c7; }
.bg-purple-100 { background-color: #f3e8ff; }

/* ===== UTILIDADES DE COLORES DE TEXTO ===== */
.text-blue-200 { color: #bfdbfe; }
.text-blue-600 { color: #2563eb; }
.text-white { color: #ffffff; }
.text-gray-400 { color: #9ca3af; }
.text-gray-500 { color: #6b7280; }
.text-gray-600 { color: #4b5563; }
.text-gray-700 { color: #374151; }
.text-gray-800 { color: #1f2937; }
.text-green-500 { color: #22c55e; }
.text-green-600 { color: #16a34a; }
.text-green-700 { color: #15803d; }
.text-red-500 { color: #ef4444; }
.text-red-700 { color: #b91c1c; }
.text-yellow-600 { color: #ca8a04; }
.text-yellow-700 { color: #a16207; }
.text-purple-600 { color: #9333ea; }

/* ===== UTILIDADES DE TIPOGRAFÍA ===== */
.text-xs { font-size: 0.75rem; line-height: 1rem; }
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.text-lg { font-size: 1.125rem; line-height: 1.5rem; }
.text-xl { font-size: 1.25rem; line-height: 1.75rem; }
.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.font-medium { font-weight: 500; }
.font-semibold { font-weight: 600; }
.font-bold { font-weight: 700; }

/* ===== UTILIDADES DE GRID ===== */
.grid { display: grid; }
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.gap-4 { gap: 1rem; }
.gap-6 { gap: 1.5rem; }

/* ===== UTILIDADES DE EFECTOS ===== */
.shadow-sm { box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); }
.shadow-md { box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); }
.shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
.shadow-inner { box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06); }

.focus\:outline-none:focus { outline: 2px solid transparent; outline-offset: 2px; }
.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\:ring-blue-500:focus { --tw-ring-color: #3b82f6; }

.hover\:bg-blue-700:hover { background-color: #1d4ed8; }
.hover\:bg-gray-100:hover { background-color: #f3f4f6; }
.hover\:text-gray-700:hover { color: #374151; }

/* ===== UTILIDADES DE POSICIONAMIENTO ===== */
.relative { position: relative; }
.absolute { position: absolute; }

.top-1 { top: 0.25rem; }
.top-2 { top: 0.5rem; }
.right-0 { right: 0; }
.right-1 { right: 0.25rem; }
.right-2 { right: 0.5rem; }
.right-3 { right: 0.75rem; }
.-top-1 { top: -0.25rem; }
.-right-1 { right: -0.25rem; }

/* ===== UTILIDADES DE TRANSICIONES ===== */
.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 { transition-duration: 200ms; }

/* ===== UTILIDADES DE DESBORDAMIENTO ===== */
.overflow-hidden { overflow: hidden; }
.overflow-y-auto { overflow-y: auto; }
.overflow-x-auto { overflow-x: auto; }

/* ===== UTILIDADES ESPECÍFICAS PARA TABLAS ===== */
.min-w-full { min-width: 100%; }
.text-left { text-align: left; }
.text-center { text-align: center; }

/* ===== UTILIDADES DE DISPLAY ===== */
.block { display: block; }
.hidden { display: none; }

/* ===== UTILIDADES DE Z-INDEX ===== */
.z-50 { z-index: 50; }

/* ===== UTILIDADES DE CURSOR ===== */
.cursor-pointer { cursor: pointer; }

/* ===== MEDIA QUERIES RESPONSIVE ===== */
@media (min-width: 640px) {
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
}

@media (min-width: 1024px) {
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }
}

/* ===== ESTILOS GENERALES PERSONALIZADOS ===== */
a {
  color: inherit;
  text-decoration: none;
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

button {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  font: inherit;
  color: inherit;
}

/* ===== ESTILOS DEL SIDEBAR PRINCIPAL ===== */
.bg-blue-800 {
  background: linear-gradient(180deg, #374151 0%, #1f2937 100%);
  border-right: 1px solid rgba(255, 255, 255, 0.1);
}

/* Header del sidebar */
.bg-blue-800 .border-b.border-blue-700 {
  border-color: rgba(255, 255, 255, 0.1);
  background: none;
  padding: 1rem;
}

/* Título del sidebar */
.bg-blue-800 .text-xl {
  color: #ffffff;
  font-weight: 700;
  font-size: 1.125rem;
  text-shadow: none;
}

.bg-blue-800 .text-blue-200 {
  color: rgba(255, 255, 255, 0.6);
  font-size: 0.75rem;
  text-shadow: none;
}

/* Separador "MENU" */
.bg-blue-800 nav::before {
  content: "MENU";
  display: block;
  color: rgba(255, 255, 255, 0.4);
  font-size: 0.6875rem;
  font-weight: 600;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  padding: 1rem 1rem 0.5rem 1rem;
  margin-top: 0.5rem;
}

/* ===== NAVEGACIÓN PRINCIPAL ===== */
.bg-blue-800 .nav-link {
  padding: 0.875rem 1rem;
  margin: 0 0.5rem 0.25rem 0.5rem;
  border-radius: 0.5rem;
  border-left: none;
  height: auto;
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
  display: flex;
  align-items: center;
}

.bg-blue-800 .nav-link:hover {
  background: rgba(255, 255, 255, 0.08);
}

/* Estados activos para enlaces principales */
.nav-link.active {
  background: rgba(59, 130, 246, 0.2);
  border-left: 4px solid #3b82f6;
  color: #ffffff;
  margin: 0 0.5rem 0.25rem 0.5rem;
  border-radius: 0.5rem;
}

/* Iconos de navegación principal */
.bg-blue-800 .nav-link i {
  width: 1.25rem;
  height: 1.25rem;
  margin-right: 0.75rem;
  font-size: 1rem;
  background: none;
  border-radius: 0;
  color: rgba(255, 255, 255, 0.7);
  transition: color 0.2s ease;
  flex-shrink: 0;
}

.bg-blue-800 .nav-link:hover i,
.bg-blue-800 .nav-link.active i,
.nav-link.active i {
  color: #ffffff;
}

/* Texto de navegación principal */
.bg-blue-800 .nav-link span {
  font-size: 0.875rem;
  font-weight: 500;
  color: rgba(255, 255, 255, 0.8);
  flex: 1;
}

.bg-blue-800 .nav-link:hover span,
.bg-blue-800 .nav-link.active span {
  color: #ffffff;
}

/* ===== SUBMENÚS DESPLEGABLES ===== */
.submenu-item {
  position: relative;
}

.bg-blue-800 .submenu-item {
  margin: 0 0.5rem 0.25rem 0.5rem;
}

.submenu-header {
  cursor: pointer;
  user-select: none;
  position: relative;
}

.bg-blue-800 .submenu-header {
  border-radius: 0.5rem;
  padding: 0.875rem 1rem;
}

/* Headers de submenú cuando tienen un hijo activo */
.submenu-header.parent-active {
  background: rgba(59, 130, 246, 0.15);
  border-left: 4px solid rgba(59, 130, 246, 0.7);
  color: #ffffff;
  margin: 0 0.5rem 0.25rem 0.5rem;
  border-radius: 0.5rem;
}

.submenu-header.parent-active i {
  color: #ffffff;
}

/* Icono chevron para submenús */
.submenu-icon {
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.6);
  margin-left: auto;
  flex-shrink: 0;
  transition: transform 0.8s cubic-bezier(0.25, 0.8, 0.25, 1), color 0.2s ease;
  transform: rotate(0deg);
  transform-origin: center;
}

.bg-blue-800 .submenu-icon {
  background: none;
  border-radius: 0;
  padding: 0;
}

/* Animaciones del chevron */
.bg-blue-800 .submenu-item.expanded .submenu-icon,
.submenu-item.expanded .submenu-icon {
  color: #ffffff;
  transform: rotate(90deg);
}

.bg-blue-800 .submenu-header:hover .submenu-icon {
  color: rgba(255, 255, 255, 0.9);
  transform: rotate(0deg) scale(1.1);
}

.bg-blue-800 .submenu-item.expanded .submenu-header:hover .submenu-icon {
  transform: rotate(90deg) scale(1.15);
}

/* Contenedor de opciones del submenú */
.submenu-content {
  max-height: 0;
  overflow: hidden;
  transition: all 0.3s ease-in-out;
  background: rgba(0, 0, 0, 0.05);
  border-radius: 0.5rem;
  margin: 0.25rem 0.5rem 0 0.5rem;
}

.bg-blue-800 .submenu-content {
  background: rgba(0, 0, 0, 0.1);
  margin: 0.25rem 0 0 0;
  border-radius: 0.375rem;
}

/* Estado expandido del submenú */
.submenu-item.expanded .submenu-content {
  max-height: 200px;
  padding: 0.375rem 0;
}

.bg-blue-800 .submenu-item.expanded .submenu-content {
  padding: 0.25rem 0;
}

/* ===== ENLACES DE SUBMENÚ ===== */
.nav-sublink {
  display: flex;
  align-items: center;
  padding: 0.625rem 0.875rem;
  font-size: 0.875rem;
  letter-spacing: 0.01em;
  height: 2.75rem;
  border-left: none;
  position: relative;
  margin: 0 1rem 0.25rem 1.5rem;
  border-radius: 0.375rem;
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.bg-blue-800 .nav-sublink {
  padding: 0.75rem 1rem 0.75rem 2.75rem;
  margin: 0;
  border-radius: 0;
  height: auto;
}

.nav-sublink:hover {
  background: rgba(255, 255, 255, 0.06);
}

.bg-blue-800 .nav-sublink:hover {
  background: rgba(255, 255, 255, 0.06);
}

/* Estados activos para elementos de submenú */
.nav-sublink.child-active {
  background: rgba(59, 130, 246, 0.08);
  border-left: 3px solid rgba(59, 130, 246, 0.4);
  color: rgba(255, 255, 255, 0.95);
  font-weight: 500;
  margin: 0 1rem 0.25rem 1.5rem;
  border-radius: 0.375rem;
  padding: 0.625rem 0.875rem;
  position: relative;
}

.bg-blue-800 .nav-sublink.active {
  background: rgba(59, 130, 246, 0.15);
}

.nav-sublink.child-active i {
  color: rgba(255, 255, 255, 0.9);
}

/* Iconos de submenú */
.nav-sublink i {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.25rem;
  height: 1.25rem;
  margin-right: 0.75rem;
  font-size: 1rem;
}

.bg-blue-800 .nav-sublink i {
  width: 1rem;
  height: 1rem;
  font-size: 0.875rem;
  background: none;
  border-radius: 0;
  margin-right: 0.75rem;
}

/* Texto de submenú */
.nav-sublink span {
  font-weight: 400;
  font-size: 0.875rem;
}

.bg-blue-800 .nav-sublink span {
  font-size: 0.8125rem;
  font-weight: 400;
}

/* Línea conectora entre submenú y padre */
.nav-sublink::before {
  content: '';
  position: absolute;
  left: -0.5rem;
  top: 50%;
  transform: translateY(-50%);
  width: 2px;
  height: 60%;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 1px;
}

.nav-sublink.child-active::before {
  background-color: rgba(59, 130, 246, 0.6);
  width: 3px;
}

.bg-blue-800 .nav-sublink::before {
  display: none;
}

/* ===== AJUSTES DE ESPACIADO ===== */
.bg-blue-800 .py-3 {
  padding-top: 0;
  padding-bottom: 1rem;
  overflow-y: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.bg-blue-800 .py-3::-webkit-scrollbar {
  width: 3px;
}

.bg-blue-800 .py-3::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.2);
  border-radius: 1.5px;
}

/* Ocultar scrollbar pero permitir scroll */
.py-3::-webkit-scrollbar {
  width: 0;
  height: 0;
  display: none;
}

/* ===== ESTADOS DE FOCUS PARA ACCESIBILIDAD ===== */
.nav-link:focus,
.nav-sublink:focus {
  outline: 2px solid rgba(59, 130, 246, 0.5);
  outline-offset: 2px;
}

/* ===== RESPONSIVE DESIGN ===== */
@media (max-width: 768px) {
  .bg-blue-800 .nav-link {
    padding: 1rem;
    margin: 0 0.25rem 0.25rem 0.25rem;
  }
  
  .bg-blue-800 .submenu-item {
    margin: 0 0.25rem 0.25rem 0.25rem;
  }

  .nav-sublink {
    margin: 0 0.5rem 0.25rem 1rem;
  }
  
  .nav-sublink.child-active {
    margin: 0 0.5rem 0.25rem 1rem;
  }
}

@media (max-height: 600px) {
  .submenu-content {
    max-height: 150px;
  }
  
  .submenu-item.expanded .submenu-content {
    max-height: 150px;
  }
  
  .nav-sublink {
    height: 2.5rem;
    padding: 0.375rem 1rem;
  }
}

/* ===== ESTILOS PARA EL MENÚ DESPLEGABLE DE USUARIO ===== */
#userMenu {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(229, 231, 235, 0.6);
  border-radius: 0.875rem;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.08);
  padding: 0.5rem;
  min-width: 12rem;
  transform-origin: top right;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 0;
  transform: scale(0.95) translateY(-8px);
}

#userMenu.hidden {
  display: none;
}

#userMenu:not(.hidden) {
  opacity: 1;
  transform: scale(1) translateY(0);
}

#userMenu a,
#userMenu button {
  display: flex;
  align-items: center;
  padding: 0.625rem 0.875rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: #374151;
  transition: all 0.2s ease;
  margin-bottom: 0.125rem;
  width: 100%;
  text-align: left;
  border: none;
  background: none;
  cursor: pointer;
}

#userMenu a:hover,
#userMenu button:hover {
  background: rgba(59, 130, 246, 0.08);
  color: #1d4ed8;
  transform: translateX(2px);
}

#userMenu a i,
#userMenu button i {
  font-size: 0.875rem;
  margin-right: 0.625rem;
  width: 1rem;
  color: #6b7280;
  transition: color 0.2s ease;
}

#userMenu a:hover i,
#userMenu button:hover i {
  color: #3b82f6;
}

#userMenu .border-t {
  border-color: rgba(229, 231, 235, 0.6);
  margin: 0.375rem 0;
}

#userMenu button[data-confirm] {
  color: #dc2626;
}

#userMenu button[data-confirm]:hover {
  background: rgba(220, 38, 38, 0.08);
  color: #b91c1c;
}

#userMenu button[data-confirm] i {
  color: #dc2626;
}

#userMenu button[data-confirm]:hover i {
  color: #b91c1c;
}

/* ===== ESTILOS PARA LA BARRA SUPERIOR ===== */
header.bg-white {
  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04), inset 0 -1px 0 rgba(0, 0, 0, 0.08);
}

header input[type="text"] {
  background: rgba(249, 250, 251, 0.9);
  border: 1px solid rgba(209, 213, 219, 0.8);
  border-radius: 0.5rem;
  transition: all 0.2s ease;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
}

header input[type="text"]:focus {
  background: rgba(255, 255, 255, 0.95);
  border-color: rgba(59, 130, 246, 0.6);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.08), 0 2px 8px rgba(0, 0, 0, 0.06);
  transform: translateY(-1px);
}

header .text-gray-500 {
  padding: 0.5rem;
  border-radius: 0.5rem;
  transition: all 0.2s ease;
}

header .text-gray-500:hover {
  background: rgba(249, 250, 251, 0.8);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

header .fas.fa-bell {
  transition: all 0.2s ease;
}

header .text-gray-500:hover .fas.fa-bell {
  color: #3b82f6;
  transform: scale(1.05);
}

header .w-9.h-9.bg-blue-600 {
  transition: all 0.2s ease;
  box-shadow: 0 2px 6px rgba(59, 130, 246, 0.25);
}

header .w-9.h-9.bg-blue-600:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.35);
}

/* ===== AJUSTES ADICIONALES PARA COMPATIBILIDAD ===== */

/* Ajustes específicos para opciones con texto más largo */
.nav-link span {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Asegurar espaciado nulo entre opciones */
.space-y-0 > * {
  margin-top: 0;
  margin-bottom: 0;
}

/* Fuente específica para elementos de navegación */
.font-medium {
  font-weight: 500;
  font-size: 0.9375rem;
}

/* Tamaños específicos optimizados */
.w-6, .h-6 {
  width: 1.35rem;
  height: 1.35rem;
}

.mr-3 {
  margin-right: 0.675rem;
}

.py-2 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.px-4 {
  padding-left: 0.875rem;
  padding-right: 0.875rem;
}

/* ===== PREVENCIÓN DE COLAPSO BRUSCO EN NAVEGADORES ===== */
@supports not (max-height: fit-content) {
  .submenu-content {
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  }
  
  .submenu-item:not(.expanded) .submenu-content {
    opacity: 0;
    visibility: hidden;
  }
  
  .submenu-item.expanded .submenu-content {
    opacity: 1;
    visibility: visible;
  }
}

/* ===== INDICADORES VISUALES SUTILES ===== */
.submenu-header::after {
  content: '';
  position: absolute;
  right: 2.5rem;
  top: 50%;
  transform: translateY(-50%);
  width: 3px;
  height: 3px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.4);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.submenu-header:hover::after {
  opacity: 1;
}

/* ===== ESTADO PARA CUANDO EL SUBMENÚ SE ESTÁ CERRANDO ===== */
.submenu-content.closing {
  transition: max-height 0.2s ease-in-out;
}

/* ===== ESTADO PARA PREVENIR SCROLL EN BODY CUANDO MODAL ABIERTO ===== */
body.overflow-hidden {
  overflow: hidden;
}


/*------------------------------------------------------------------*/
/* ============== ESTILOS PARA EL MODAL DE PROGRAMAS ============== */
/* Modal - Estructura principal */
#programModal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.7);
  overflow: auto;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
}

  #programModal.visible {
    opacity: 1;
    visibility: visible;
  }

  #programModal.hidden {
    display: none;
  }

  /* Contenido del modal */
  #programModal > div {
    background-color: #ffffff;
    border-radius: 0.5rem;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    width: 91.666667%;
    max-height: 90vh;
    overflow-y: auto;
    transform: scale(0.95);
    transition: transform 0.3s ease-in-out;
    margin: 1.5rem auto;
  }

  #programModal > div.scale-100 {
    transform: scale(1);
  }

  /* Tamaños responsive */
  @media (min-width: 768px) {
    #programModal > div {
      width: 80%;
    }
  }

  @media (min-width: 1024px) {
    #programModal > div {
      width: 75%;
    }
  }

  @media (min-width: 1280px) {
    #programModal > div {
      width: 66.666667%;
    }
  }

  /* Cabecera del modal */
  #programModal .sticky {
    position: sticky;
    top: 0;
    z-index: 10;
    background-color: #ffffff;
    padding: 1rem 1.5rem;
    border-bottom: 1px solid #e5e7eb;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  #programModal h2 {
    font-size: 1.25rem;
    font-weight: 700;
    color: #1f2937;
  }

  #closeModal {
    color: #9ca3af;
    transition: color 0.2s;
    font-size: 1.25rem;
    cursor: pointer;
    background: none;
    border: none;
    padding: 0.25rem;
  }

  #closeModal:hover {
    color: #ef4444;
  }

  /* Contenido del modal */
  #modalContent {
    padding: 1.5rem;
  }

  /* Animación de carga */
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  /* Control de scroll */
  .overflow-y-auto {
    scrollbar-width: thin;
    scrollbar-color: rgba(156, 163, 175, 0.5) transparent;
  }

  .overflow-y-auto::-webkit-scrollbar {
    width: 6px;
  }

  .overflow-y-auto::-webkit-scrollbar-track {
    background: transparent;
  }

  .overflow-y-auto::-webkit-scrollbar-thumb {
    background-color: rgba(156, 163, 175, 0.5);
    border-radius: 20px;
  }

  /* Estilos para el contenido del modal */
  #modalContent .space-y-6 > * + * {
    margin-top: 1.5rem;
  }

  #modalContent .text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 700;
    color: #1f2937;
  }

  #modalContent .text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  #modalContent .text-gray-500 {
    color: #6b7280;
  }

  #modalContent .text-gray-700 {
    color: #374151;
  }

  #modalContent .text-gray-800 {
    color: #1f2937;
  }

  #modalContent .text-gray-900 {
    color: #111827;
  }

  #modalContent .font-medium {
    font-weight: 500;
  }

  #modalContent .font-semibold {
    font-weight: 600;
  }

  #modalContent .font-bold {
    font-weight: 700;
  }

  #modalContent .bg-gray-50 {
    background-color: #f9fafb;
  }

  #modalContent .rounded-lg {
    border-radius: 0.5rem;
  }

  #modalContent .p-4 {
    padding: 1rem;
  }

  #modalContent .mb-2 {
    margin-bottom: 0.5rem;
  }

  /* Grid y estructura */
  #modalContent .grid {
    display: grid;
    margin-bottom: 1.5rem;
  }

  #modalContent .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  #modalContent .gap-4 {
    gap: 1rem;
  }

  @media (min-width: 768px) {
    #modalContent .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    
    #modalContent .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  /* Estilos para listas */
  #modalContent .list-disc {
    list-style-type: disc;
  }

  #modalContent .list-inside {
    list-style-position: inside;
  }

  #modalContent .space-y-2 > * + * {
    margin-top: 0.5rem;
  }

  /* Estilos para botones */
  #modalContent .bg-blue-600 {
    background-color: #2563eb;
  }

  #modalContent .bg-blue-600:hover {
    background-color: #1d4ed8;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  #modalContent .text-white {
    color: #ffffff;
  }

  /* Estilos de badges de estado */
  #modalContent .rounded-full {
    border-radius: 9999px;
  }

  #modalContent .bg-green-100 {
    background-color: #dcfce7;
  }

  #modalContent .text-green-800 {
    color: #166534;
  }

  #modalContent .bg-red-100 {
    background-color: #fee2e2;
  }

  #modalContent .text-red-800 {
    color: #991b1b;
  }

  #modalContent .bg-yellow-100 {
    background-color: #fef3c7;
  }

  #modalContent .text-yellow-800 {
    color: #92400e;
  }

  /* Control específico para la imagen */
  #modalContent .bg-white.p-4.rounded-lg.border.border-gray-200.flex.items-center.justify-center {
    width: 100%;
    height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  #modalContent .image-preview-container {
    margin-top: 0.5rem;
    max-width: 100%;
    max-height: 200px;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    overflow: hidden;
    background-color: #f9fafb;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #modalContent .image-preview-container img,
  #modalContent .max-w-full.max-h-full.object-contain {
    width: auto;
    height: auto;
    max-width: 100%;
    max-height: 200px;
    object-fit: contain;
    display: block;
    margin: 0 auto;
  }

  /* Corregir altura de las tarjetas */
  #modalContent .h-full {
    height: 100% !important;
    min-height: 100px !important;
  }

  /* Ajustes para pantallas pequeñas */
  @media (max-width: 640px) {
    #programModal > div {
      width: 95% !important;
      max-height: 85vh !important;
    }
    
    #modalContent .grid.grid-cols-1.md\:grid-cols-2,
    #modalContent .grid.grid-cols-1.md\:grid-cols-3 {
      display: block !important;
    }
    
    #modalContent .grid.grid-cols-1.md\:grid-cols-2 > div,
    #modalContent .grid.grid-cols-1.md\:grid-cols-3 > div {
      margin-bottom: 1rem !important;
    }
  }

/* Prevenir scroll en el body cuando el modal está abierto */
body.overflow-hidden {
  overflow: hidden;
}

/* Mejora visual para la imagen del programa */
#modalContent .image-preview-container img {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
  border-radius: 0.5rem;
}

/* Iconos para estados con colores */
#modalContent .fas.fa-play-circle {
  color: #10b981;
  margin-right: 0.25rem;
}

#modalContent .fas.fa-ban {
  color: #ef4444;
  margin-right: 0.25rem;
}

#modalContent .fas.fa-clock {
  color: #f59e0b;
  margin-right: 0.25rem;
}

#modalContent .fas.fa-flag-checkered {
  color: #6b7280;
  margin-right: 0.25rem;
}

/* Iconos para información de auditoría */
#modalContent .fas.fa-user,
#modalContent .fas.fa-user-edit {
  margin-right: 0.25rem;
  color: #6b7280;
}

/* Icono para total de inscripciones */
#modalContent .fas.fa-users {
  color: #2563eb;
  margin-right: 0.25rem;
}

/* Iconos para disponibilidad */
#modalContent .fas.fa-check-circle {
  color: #10b981;
  margin-right: 0.25rem;
}

#modalContent .fas.fa-times-circle {
  color: #ef4444;
  margin-right: 0.25rem;
}

/* Mejora del código ID */
#modalContent code {
  background-color: #f3f4f6;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  font-family: 'Courier New', monospace;
}

/* Mejora del botón de editar */
#modalContent .bg-blue-600:hover {
  background-color: #1d4ed8;
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease-in-out;
}

/* Icono del botón editar */
#modalContent .fas.fa-edit {
  margin-right: 0.5rem;
}

/* Hover effect sutil en las tarjetas */
#modalContent .bg-white.p-4.rounded-lg.border.border-gray-200:hover {
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05);
  transition: box-shadow 0.2s ease-in-out;
}

/* Mejora del espaciado en listas */
#modalContent .list-disc.list-inside.space-y-2 li {
  line-height: 1.5;
  margin-bottom: 0.5rem;
}

/* Icono para información del formulario */
#modalContent .bg-blue-50 .fas.fa-info-circle {
  color: #3b82f6;
  margin-right: 0.75rem;
  margin-top: 0.25rem;
}

/* Mejora de colores para texto de estado */
#modalContent .text-green-600 {
  color: #059669;
  font-weight: 500;
}

#modalContent .text-red-600 {
  color: #dc2626;
  font-weight: 500;
}

/*------------------------------------------------------------------*/

  /* ============== ESTILOS PARA EL MODAL DE EVENTOS ============== */

  /* Modal de eventos - Estructura principal */
  #eventModal {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.7);
    overflow: auto;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  #eventModal.visible {
    opacity: 1;
    visibility: visible;
  }

  #eventModal.hidden {
    display: none;
  }

  /* Contenido del modal de eventos */
  #eventModal > div {
    background-color: #ffffff;
    border-radius: 0.5rem;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    width: 91.666667%;
    max-height: 90vh;
    overflow-y: auto;
    transform: scale(0.95);
    transition: transform 0.3s ease-in-out;
    margin: 1.5rem auto;
  }

  #eventModal > div.scale-100 {
    transform: scale(1);
  }

  /* Tamaños responsive para modal de eventos */
  @media (min-width: 768px) {
    #eventModal > div {
      width: 80%;
    }
  }

  @media (min-width: 1024px) {
    #eventModal > div {
      width: 75%;
    }
  }

  @media (min-width: 1280px) {
    #eventModal > div {
      width: 66.666667%;
    }
  }

  /* Cabecera del modal de eventos */
  #eventModal .sticky {
    position: sticky;
    top: 0;
    z-index: 10;
    background-color: #ffffff;
    padding: 1rem 1.5rem;
    border-bottom: 1px solid #e5e7eb;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  #eventModal h2 {
    font-size: 1.25rem;
    font-weight: 700;
    color: #1f2937;
  }

  #closeEventModal {
    color: #9ca3af;
    transition: color 0.2s;
    font-size: 1.25rem;
    cursor: pointer;
    background: none;
    border: none;
    padding: 0.25rem;
  }

  #closeEventModal:hover {
    color: #ef4444;
  }

  /* Contenido del modal de eventos */
  #eventModalContent {
    padding: 1.5rem;
  }

  /* Estilos específicos para el contenido del modal de eventos */
  #eventModalContent .space-y-6 > * + * {
    margin-top: 1.5rem;
  }

  #eventModalContent .text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 700;
    color: #1f2937;
  }

  #eventModalContent .text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  #eventModalContent .text-gray-500 {
    color: #6b7280;
  }

  #eventModalContent .text-gray-700 {
    color: #374151;
  }

  #eventModalContent .text-gray-800 {
    color: #1f2937;
  }

  #eventModalContent .text-gray-900 {
    color: #111827;
  }

  #eventModalContent .font-medium {
    font-weight: 500;
  }

  #eventModalContent .font-semibold {
    font-weight: 600;
  }

  #eventModalContent .font-bold {
    font-weight: 700;
  }

  #eventModalContent .bg-gray-50 {
    background-color: #f9fafb;
  }

  #eventModalContent .rounded-lg {
    border-radius: 0.5rem;
  }

  #eventModalContent .p-4 {
    padding: 1rem;
  }

  #eventModalContent .mb-2 {
    margin-bottom: 0.5rem;
  }

  /* Grid y estructura para eventos */
  #eventModalContent .grid {
    display: grid;
    margin-bottom: 1.5rem;
  }

  #eventModalContent .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  #eventModalContent .gap-4 {
    gap: 1rem;
  }

  /* NUEVO: Grids específicos para imágenes múltiples */
  #eventModalContent .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  #eventModalContent .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  #eventModalContent .gap-2 {
    gap: 0.5rem;
  }

  #eventModalContent .gap-3 {
    gap: 0.75rem;
  }

  @media (min-width: 768px) {
    #eventModalContent .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    
    #eventModalContent .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  /* Estilos para badges de estado de eventos */
  #eventModalContent .rounded-full {
    border-radius: 9999px;
  }

  #eventModalContent .bg-green-100 {
    background-color: #dcfce7;
  }

  #eventModalContent .text-green-800 {
    color: #166534;
  }

  #eventModalContent .bg-red-100 {
    background-color: #fee2e2;
  }

  #eventModalContent .text-red-800 {
    color: #991b1b;
  }

  #eventModalContent .bg-yellow-100 {
    background-color: #fef3c7;
  }

  #eventModalContent .text-yellow-800 {
    color: #92400e;
  }

  #eventModalContent .bg-blue-50 {
    background-color: #eff6ff;
  }

  #eventModalContent .text-blue-800 {
    color: #1e40af;
  }

  /* ACTUALIZADO: Estilos para contenedor de imágenes de eventos */
  #eventModalContent .bg-white.p-4.rounded-lg.border.border-gray-200 {
    background-color: #ffffff;
    padding: 1rem;
    border-radius: 0.5rem;
    border: 1px solid #e5e7eb;
  }

  /* NUEVO: Estilos para imagen única (centrada) */
  #eventModalContent .flex.items-center.justify-center[style*="height: 200px"] {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    height: 200px !important;
    width: 100% !important;
  }

  #eventModalContent .flex.items-center.justify-center[style*="height: 200px"] img {
    max-width: 100% !important;
    max-height: 100% !important;
    object-fit: contain !important;
    border-radius: 0.5rem !important;
    border: 1px solid #e5e7eb !important;
  }

  /* NUEVO: Estilos para grid de múltiples imágenes */
  #eventModalContent .grid.grid-cols-2.gap-3 {
    display: grid !important;
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 0.75rem !important;
  }

  #eventModalContent .grid.grid-cols-3.gap-2 {
    display: grid !important;
    grid-template-columns: repeat(3, 1fr) !important;
    gap: 0.5rem !important;
  }

  /* NUEVO: Estilos para items individuales de imagen */
  #eventModalContent .relative.group.cursor-pointer {
    position: relative !important;
    cursor: pointer !important;
    border-radius: 0.5rem !important;
    overflow: hidden !important;
    transition: all 0.3s ease !important;
  }

  #eventModalContent .relative.group.cursor-pointer:hover {
    transform: scale(1.02) !important;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1) !important;
  }

  /* NUEVO: Imágenes en grid - tamaños específicos */
  #eventModalContent .grid.grid-cols-2.gap-3 img {
    width: 100% !important;
    height: 96px !important; /* h-24 equivale a 96px */
    object-fit: cover !important;
    border-radius: 0.5rem !important;
    border: 1px solid #e5e7eb !important;
    transition: opacity 0.3s ease !important;
  }

  #eventModalContent .grid.grid-cols-3.gap-2 img {
    width: 100% !important;
    height: 80px !important; /* h-20 equivale a 80px */
    object-fit: cover !important;
    border-radius: 0.5rem !important;
    border: 1px solid #e5e7eb !important;
    transition: opacity 0.3s ease !important;
  }

  #eventModalContent .relative.group.cursor-pointer:hover img {
    opacity: 0.9 !important;
  }

  /* NUEVO: Badges sobre las imágenes */
  #eventModalContent .absolute.bottom-1.left-1 {
    position: absolute !important;
    bottom: 0.25rem !important;
    left: 0.25rem !important;
  }

  #eventModalContent .bg-black.bg-opacity-70.text-white {
    background-color: rgba(0, 0, 0, 0.7) !important;
    color: #ffffff !important;
    padding: 0.125rem 0.5rem !important;
    border-radius: 0.25rem !important;
    font-size: 0.75rem !important;
    font-weight: 500 !important;
  }

  /* NUEVO: Información adicional debajo de las imágenes */
  #eventModalContent .mt-3.pt-3.border-t.border-gray-100 {
    margin-top: 0.75rem !important;
    padding-top: 0.75rem !important;
    border-top: 1px solid #f3f4f6 !important;
  }

  #eventModalContent .text-xs.text-gray-500 {
    font-size: 0.75rem !important;
    color: #6b7280 !important;
  }

  #eventModalContent .fas.fa-info-circle {
    margin-right: 0.25rem !important;
  }

  /* NUEVO: Estado sin imágenes */
  #eventModalContent .flex.items-center.justify-center.h-32.bg-gray-100.rounded {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    height: 128px !important;
    background-color: #f3f4f6 !important;
    border-radius: 0.5rem !important;
  }

  #eventModalContent .text-center .fas.fa-image {
    font-size: 2rem !important;
    color: #d1d5db !important;
    margin-bottom: 0.5rem !important;
  }

  #eventModalContent .text-gray-500.text-sm {
    color: #6b7280 !important;
    font-size: 0.875rem !important;
  }

  /* NUEVO: Modal de imagen ampliada */
  #imageModal {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    background-color: rgba(0, 0, 0, 0.75) !important;
    z-index: 10000 !important; /* Mayor que el modal de eventos */
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    padding: 1rem !important;
  }

  #imageModal.hidden {
    display: none !important;
  }

  #imageModal .relative {
    position: relative !important;
    max-width: 4rem !important; /* max-w-4xl */
    max-height: 100% !important;
  }

  #imageModal button {
    position: absolute !important;
    top: 1rem !important;
    right: 1rem !important;
    color: #ffffff !important;
    z-index: 10 !important;
    background: none !important;
    border: none !important;
    cursor: pointer !important;
    transition: color 0.3s ease !important;
  }

  #imageModal button:hover {
    color: #d1d5db !important;
  }

  #imageModal button .fas.fa-times {
    font-size: 2rem !important;
  }

  #modalImage {
    max-width: 100% !important;
    max-height: 100% !important;
    object-fit: contain !important;
    border-radius: 0.5rem !important;
  }

  #modalImageInfo {
    position: absolute !important;
    bottom: 1rem !important;
    left: 1rem !important;
    background-color: rgba(0, 0, 0, 0.7) !important;
    color: #ffffff !important;
    padding: 0.75rem !important;
    border-radius: 0.25rem !important;
    font-size: 0.875rem !important;
  }

  /* Control específico para la imagen de eventos (legacy - mantener por compatibilidad) */
  #eventModalContent .image-preview-container {
    margin-top: 0.5rem;
    max-width: 100%;
    max-height: 200px;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    overflow: hidden;
    background-color: #f9fafb;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #eventModalContent .image-preview-container img,
  #eventModalContent .max-w-full.max-h-full.object-contain {
    width: auto;
    height: auto;
    max-width: 100%;
    max-height: 200px;
    object-fit: contain;
    display: block;
    margin: 0 auto;
  }

  /* Corregir altura de las tarjetas de eventos */
  #eventModalContent .h-full {
    height: 100% !important;
    min-height: 100px !important;
  }

  /* Estilos para botones en modal de eventos */
  #eventModalContent .bg-blue-600 {
    background-color: #2563eb;
  }

  #eventModalContent .bg-blue-600:hover {
    background-color: #1d4ed8;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  #eventModalContent .text-white {
    color: #ffffff;
  }

  /* Ajustes para pantallas pequeñas - modal de eventos */
  @media (max-width: 640px) {
    #eventModal > div {
      width: 95% !important;
      max-height: 85vh !important;
    }
    
    #eventModalContent .grid.grid-cols-1.md\:grid-cols-2 {
      display: block !important;
    }
    
    #eventModalContent .grid.grid-cols-1.md\:grid-cols-2 > div {
      margin-bottom: 1rem !important;
    }
    
    /* Responsive para imágenes múltiples en móvil */
    #eventModalContent .grid.grid-cols-2.gap-3,
    #eventModalContent .grid.grid-cols-3.gap-2 {
      grid-template-columns: repeat(2, 1fr) !important;
      gap: 0.5rem !important;
    }
    
    #eventModalContent .grid.grid-cols-3.gap-2 img {
      height: 60px !important;
    }
  }

  /* Control de scroll para modal de eventos */
  #eventModalContent .overflow-y-auto {
    scrollbar-width: thin;
    scrollbar-color: rgba(156, 163, 175, 0.5) transparent;
  }

  #eventModalContent .overflow-y-auto::-webkit-scrollbar {
    width: 6px;
  }

  #eventModalContent .overflow-y-auto::-webkit-scrollbar-track {
    background: transparent;
  }

  #eventModalContent .overflow-y-auto::-webkit-scrollbar-thumb {
    background-color: rgba(156, 163, 175, 0.5);
    border-radius: 20px;
  }

  /* Estilos específicos para iconos en badges de estado de eventos */
  #eventModalContent .fas.fa-play-circle,
  #eventModalContent .fas.fa-ban,
  #eventModalContent .fas.fa-clock,
  #eventModalContent .fas.fa-flag-checkered {
    margin-right: 0.25rem;
  }

  /* Estilos para enlaces externos en modal de eventos */
  #eventModalContent .text-blue-600 {
    color: #2563eb;
  }

  #eventModalContent .text-blue-600:hover {
    color: #1d4ed8;
  }

  #eventModalContent .fas.fa-external-link-alt {
    margin-right: 0.5rem;
  }

  /* Estilos para información de auditoría en eventos */
  #eventModalContent code {
    background-color: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
  }

  /* Estilos para secciones de información en modal de eventos */
  #eventModalContent .space-y-3 > * + * {
    margin-top: 0.75rem;
  }

  /* Animación de carga para modal de eventos */
  #eventModalContent .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

/* Prevenir scroll en el body cuando el modal de eventos está abierto */
body.overflow-hidden {
  overflow: hidden;
}

/*PROBANDO MEJORAS EN PANEL*/


</style>
  

<!-- jQuery para el menú desplegable -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
</head>
<body class="bg-gray-100">
  <div class="flex h-screen overflow-hidden">
    <!-- Sidebar -->
    <div class="bg-blue-800 text-white w-64 flex-shrink-0 flex flex-col">
      <div class="p-4 border-b border-blue-700 flex items-center justify-between">
        <div>
          <h1 class="text-xl font-bold">Incuba UNAS</h1>
          <p class="text-xs text-blue-200">Panel de Administración</p>
        </div>
        <button class="text-white">
          <i class="fas fa-bars"></i>
        </button>
      </div>
      
<nav class="flex-1 py-3 overflow-y-auto">
  <ul class="space-y-0">
    <li>
      <a href="<%= admin_dashboard_path %>" class="nav-link flex items-center py-2 px-4 <%= controller_name == 'dashboard' ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-tachometer-alt w-6 h-6 mr-3"></i>
        <span class="font-medium">Dashboard</span>
      </a>
    </li>
    
    <!-- Programas - Solo activo cuando NO es inscripciones -->
    <li>
      <a href="<%= admin_programs_path %>" class="nav-link flex items-center py-2 px-4 <%= (controller_name == 'programs' && request.path != admin_inscripciones_programs_path) ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-graduation-cap w-6 h-6 mr-3"></i>
        <span class="font-medium">Programas</span>
      </a>
    </li>
    
    <!-- Eventos - Solo activo cuando NO es inscripciones -->
    <li>
      <a href="<%= admin_events_path %>" class="nav-link flex items-center py-2 px-4 <%= (controller_name == 'events' && request.path != admin_inscripciones_events_path) ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-calendar-alt w-6 h-6 mr-3"></i>
        <span class="font-medium">Eventos</span>
      </a>
    </li>
    
<li class="submenu-item <%= controller_name == 'users' ? 'expanded' : '' %>">
  <div class="submenu-header nav-link flex items-center py-2 px-4 hover:bg-blue-700 cursor-pointer <%= controller_name == 'users' ? 'parent-active' : '' %>" data-submenu="usuarios">
    <i class="fas fa-users w-6 h-6 mr-3"></i>
    <span class="font-medium flex-1">Usuarios</span>
    <i class="fas fa-chevron-right submenu-icon transition-transform duration-200"></i>
  </div>
  <ul class="submenu-content space-y-0" data-submenu-content="usuarios">
    <li>
      <%= link_to new_admin_user_path, 
          class: "nav-sublink flex items-center py-2 px-4 pl-12 hover:bg-blue-700 #{'child-active' if controller_name == 'users' && action_name == 'new'}" do %>
        <i class="fas fa-user-plus w-5 h-5 mr-3"></i>
        <span class="font-medium">Crear Usuario</span>
      <% end %>
    </li>
    <li>
      <%= link_to admin_users_path, 
          class: "nav-sublink flex items-center py-2 px-4 pl-12 hover:bg-blue-700 #{'child-active' if controller_name == 'users' && %w[index show edit].include?(action_name)}" do %>
        <i class="fas fa-list-ul w-5 h-5 mr-3"></i>
        <span class="font-medium">Gestionar Usuarios</span>
      <% end %>
    </li>
  </ul>
</li>
    
    <!-- Inscripciones Recibidas - CON CLASES ESPECÍFICAS -->
    <li class="submenu-item <%= request.path == admin_inscripciones_programs_path || request.path == admin_inscripciones_events_path ? 'expanded' : '' %>">
      <div class="submenu-header nav-link flex items-center py-2 px-4 hover:bg-blue-700 cursor-pointer <%= request.path == admin_inscripciones_programs_path || request.path == admin_inscripciones_events_path ? 'parent-active' : '' %>" data-submenu="inscripciones">
        <i class="fas fa-clipboard-list w-6 h-6 mr-3"></i>
        <span class="font-medium flex-1">Inscripciones</span>
        <i class="fas fa-chevron-right submenu-icon transition-transform duration-200"></i>
      </div>
      <ul class="submenu-content space-y-0" data-submenu-content="inscripciones">
        <li>
          <%= link_to admin_inscripciones_programs_path, class: "nav-sublink flex items-center py-2 px-4 pl-12 hover:bg-blue-700 #{'child-active' if request.path == admin_inscripciones_programs_path}" do %>
            <i class="fas fa-graduation-cap w-5 h-5 mr-3"></i>
            <span class="font-medium">De Programas</span>
          <% end %>
        </li>
        <li>
          <%= link_to admin_inscripciones_events_path, class: "nav-sublink flex items-center py-2 px-4 pl-12 hover:bg-blue-700 #{'child-active' if request.path == admin_inscripciones_events_path}" do %>
            <i class="fas fa-calendar-check w-5 h-5 mr-3"></i>
            <span class="font-medium">De Eventos</span>
          <% end %>
        </li>
      </ul>
    </li>
    
    <!-- Patrocinadores -->
    <li class="submenu-item <%= controller_name == 'sponsors' || controller_name == 'patrocinadores' ? 'expanded' : '' %>">
      <div class="submenu-header nav-link flex items-center py-2 px-4 hover:bg-blue-700 cursor-pointer <%= controller_name == 'sponsors' || controller_name == 'patrocinadores' ? 'parent-active' : '' %>" data-submenu="patrocinadores">
        <i class="fas fa-building w-6 h-6 mr-3"></i>
        <span class="font-medium flex-1">Patrocinadores</span>
        <i class="fas fa-chevron-right submenu-icon transition-transform duration-200"></i>
      </div>
      <ul class="submenu-content space-y-0" data-submenu-content="patrocinadores">
        <li>
          <a href="#" class="nav-sublink flex items-center py-2 px-4 pl-12 hover:bg-blue-700 <%= (controller_name == 'sponsors' && action_name == 'upload') || (controller_name == 'patrocinadores' && action_name == 'new') ? 'child-active' : '' %>">
            <i class="fas fa-upload w-5 h-5 mr-3"></i>
            <span class="font-medium">Subir Patrocinadores</span>
          </a>
        </li>
        <li>
          <a href="#" class="nav-sublink flex items-center py-2 px-4 pl-12 hover:bg-blue-700 <%= (controller_name == 'sponsors' && action_name == 'associate') || (controller_name == 'patrocinadores' && action_name == 'associate') ? 'child-active' : '' %>">
            <i class="fas fa-link w-5 h-5 mr-3"></i>
            <span class="font-medium">Asociar Patrocinadores</span>
          </a>
        </li>
      </ul>
    </li>
    
    <li>
      <a href="#" class="nav-link flex items-center py-2 px-4 <%= controller_name == 'testimonials' || controller_name == 'testimonios' ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-comment-dots w-6 h-6 mr-3"></i>
        <span class="font-medium">Subir Testimonios</span>
      </a>
    </li>
    <li>
      <a href="#" class="nav-link flex items-center py-2 px-4 <%= controller_name == 'academic_resources' || controller_name == 'recursos' ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-book w-6 h-6 mr-3"></i>
        <span class="font-medium">Recursos Académicos</span>
      </a>
    </li>
    <li>
      <a href="#" class="nav-link flex items-center py-2 px-4 <%= controller_name == 'mentors' || controller_name == 'mentores' ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-chalkboard-teacher w-6 h-6 mr-3"></i>
        <span class="font-medium">Mentores</span>
      </a>
    </li>
    <li>
      <a href="#" class="nav-link flex items-center py-2 px-4 <%= controller_name == 'winners' || controller_name == 'ganadores' ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-trophy w-6 h-6 mr-3"></i>
        <span class="font-medium">Ganadores</span>
      </a>
    </li>
    <li>
      <a href="#" class="nav-link flex items-center py-2 px-4 <%= controller_name == 'team' || controller_name == 'equipo' ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-users-cog w-6 h-6 mr-3"></i>
        <span class="font-medium">Equipo Incuba</span>
      </a>
    </li>
    <li>
      <a href="#" class="nav-link flex items-center py-2 px-4 <%= controller_name == 'contact' || controller_name == 'contactanos' ? 'active bg-blue-700' : 'hover:bg-blue-700' %>">
        <i class="fas fa-envelope w-6 h-6 mr-3"></i>
        <span class="font-medium">Contáctanos</span>
      </a>
    </li>
  </ul>
</nav>
    </div>
    
    <!-- Main Content -->
    <div class="flex-1 flex flex-col overflow-hidden">
      <!-- Top Navigation -->
<!-- Top Navigation -->
<header class="bg-white shadow-sm">
  <div class="flex items-center justify-between p-4">
    <div class="flex items-center">
      <h1 class="text-lg font-semibold text-gray-700">Dashboard</h1>
      <span class="text-gray-500 ml-3">Bienvenido a tu panel de administración</span>
    </div>
    
    <div class="flex items-center space-x-4">
      <div class="relative">
        <input type="text" placeholder="Buscar..." class="border rounded-lg py-2 px-3 pr-8 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm w-64" />
        <button class="absolute right-2 top-2 text-gray-400">
          <i class="fas fa-search"></i>
        </button>
      </div>
      
      <div class="relative">
        <button class="text-gray-500 hover:text-gray-700">
          <i class="fas fa-bell text-xl"></i>
          <span class="absolute -top-1 -right-1 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs">3</span>
        </button>
      </div>
      
      <div class="relative">
        <div class="flex items-center cursor-pointer" id="userMenuButton">
          <!-- Avatar dinámico: foto de perfil o iniciales -->
          <div class="w-9 h-9 bg-blue-600 rounded-full flex items-center justify-center text-white mr-2 overflow-hidden">
            <% if current_user.avatar.attached? %>
              <%= image_tag current_user.avatar, 
                  class: "w-full h-full object-cover", 
                  alt: current_user.nombre_completo %>
            <% else %>
              <%= current_user.nombre[0].upcase %>
            <% end %>
          </div>
          <span class="text-gray-700"><%= current_user.nombre %></span>
          <i class="fas fa-chevron-down ml-1 text-gray-500"></i>
        </div>
        
        <!-- Menú desplegable de usuario -->
        <div id="userMenu" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 border">
          <%= link_to admin_profile_path, class: "block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors" do %>
            <i class="fas fa-user mr-2 text-blue-600"></i> Ver Perfil
          <% end %>
          <div class="border-t border-gray-100"></div>
          
          <%= button_to destroy_user_session_path, 
              method: :delete,
              form: { 
                style: "margin: 0; display: block;" 
              },
              class: "w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-red-50 hover:text-red-600 transition-colors border-0 bg-transparent cursor-pointer",
              data: { 
                confirm: "¿Estás seguro que quieres cerrar sesión?" 
              } do %>
            <i class="fas fa-sign-out-alt mr-2"></i> Cerrar Sesión
          <% end %>
        </div>
      </div>
    </div>
  </div>
</header>
      
      <!-- Page Content -->
      <main class="flex-1 overflow-y-auto p-6">
        <%= yield %>
      </main>
      
      <!-- Footer -->
      <footer class="bg-white p-4 shadow-inner text-center text-gray-500 text-sm">
        © <%= Date.today.year %> Incuba UNAS. Todos los derechos reservados.
      </footer>
    </div>
  </div>

<!-- JavaScript mejorado para el menú desplegable de usuario -->
<script>
  // Función para inicializar el dropdown
  function initializeUserDropdown() {
    // Remover event listeners existentes para evitar duplicados
    $("#userMenuButton").off('click');
    $(document).off('click.userMenu');
    
    // Event listener para el botón del menú
    $("#userMenuButton").on('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      console.log("Click en userMenuButton"); // Debug
      $("#userMenu").toggleClass("hidden");
    });
    
    // Event listener para cerrar el menú al hacer click fuera
    $(document).on('click.userMenu', function(e) {
      if (!$(e.target).closest("#userMenu").length && !$(e.target).closest("#userMenuButton").length) {
        $("#userMenu").addClass("hidden");
      }
    });
    
    console.log("Dropdown de usuario inicializado"); // Debug
  }

  // Inicializar cuando el DOM esté listo
  $(document).ready(function() {
    console.log("DOM ready - inicializando dropdown"); // Debug
    initializeUserDropdown();
  });

  // También inicializar después de navegación Turbo (si aplica)
  $(document).on('turbo:load', function() {
    console.log("Turbo load - reinicializando dropdown"); // Debug
    initializeUserDropdown();
  });

  // Fallback: inicializar después de un delay
  setTimeout(function() {
    if ($("#userMenuButton").length && !$("#userMenuButton").data('initialized')) {
      console.log("Fallback initialization"); // Debug
      initializeUserDropdown();
      $("#userMenuButton").data('initialized', true);
    }
  }, 500);
</script>

<!-- JavaScript DE INPUT DINAMICO DE BENEFICIO... SELECT Y PREVISUALIZER IMAGEN EN PROGRAMAS -->
<script>
  // Función principal que configura todas las funcionalidades
  function initializeFormFunctionality() {
    console.log("Inicializando funcionalidades con JavaScript puro");
    
    // 1. Funcionalidad de Select para mensaje de tipo de programa
    function setupSelectMessages() {
      const typeSelects = document.querySelectorAll('select[name="program[tipo]"]');
      
      typeSelects.forEach(select => {
        // Eliminar event listeners previos para evitar duplicación
        const newSelect = select.cloneNode(true);
        select.parentNode.replaceChild(newSelect, select);
        
        newSelect.addEventListener('change', function() {
          // Buscar el elemento de salida (small tag) cercano al select
          const outputElement = this.parentElement.querySelector('small');
          
          if (outputElement) {
            const selectedValue = this.value;
            if (selectedValue) {
              const tipoText = {
                'preincubacion': 'Preincubación',
                'incubacion': 'Incubación',
                'innovacion': 'Innovación'
              }[selectedValue] || selectedValue;
              
              outputElement.textContent = `Formulario del Programa: ${tipoText}`;
              outputElement.className = "text-sm text-green-600 font-medium mt-1";
            } else {
              outputElement.textContent = "Seleccione un tipo de programa";
              outputElement.className = "text-sm text-gray-500 mt-1";
            }
          }
        });
      });
    }
    
    // 2. Funcionalidad de campos dinámicos (objetivos, beneficios, requisitos)
    function setupDynamicFields() {
      // Encontrar todos los contenedores de campos dinámicos
      const fieldContainers = document.querySelectorAll('[data-controller="dynamic-fields"]');
      
      fieldContainers.forEach(container => {
        // Obtener datos importantes del contenedor
        const fieldType = container.getAttribute('data-dynamic-fields-field-type-value');
        const maxFields = parseInt(container.getAttribute('data-dynamic-fields-max-fields-value'), 10) || 6;
        
        // Encontrar elementos importantes dentro del contenedor
        const fieldsContainer = container.querySelector('[data-dynamic-fields-target="container"]');
        const counter = container.querySelector('[data-dynamic-fields-target="counter"]');
        const addButton = container.querySelector('[data-dynamic-fields-target="addButton"]');
        
        if (addButton && fieldsContainer) {
          // Eliminar event listeners previos para evitar duplicación
          const newAddButton = addButton.cloneNode(true);
          addButton.parentNode.replaceChild(newAddButton, addButton);
          
          // Añadir evento al botón de agregar
          newAddButton.addEventListener('click', function() {
            // Contar campos visibles actuales
            const visibleFields = Array.from(fieldsContainer.querySelectorAll('.dynamic-field'))
              .filter(field => field.style.display !== 'none').length;
            
            // Verificar si se alcanzó el máximo
            if (visibleFields >= maxFields) {
              console.log(`Máximo de ${maxFields} campos alcanzado para ${fieldType}`);
              return;
            }
            
            // Generar un nuevo índice único
            const newIndex = new Date().getTime();
            
            // Crear el HTML para el nuevo campo
            const fieldHtml = `
              <div class="mb-3 dynamic-field">
                <div class="flex">
                  <input type="text"
                         name="program[${fieldType}s_attributes][${newIndex}][descripcion]"
                         class="flex-1 px-3 py-2 border border-gray-300 rounded-l-md text-sm focus:ring-blue-500 focus:border-blue-500"
                         placeholder="Ingrese ${fieldType}"
                         required>
                  <input type="hidden"
                         name="program[${fieldType}s_attributes][${newIndex}][_destroy]"
                         value="0"
                         data-destroy-input>
                  <button type="button"
                         class="px-3 py-2 text-red-600 bg-white border border-gray-300 border-l-0 rounded-r-md hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-red-500"
                         onclick="removeField(this)">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
              </div>
            `;
            
            // Agregar el nuevo campo al contenedor
            fieldsContainer.insertAdjacentHTML('beforeend', fieldHtml);
            
            // Actualizar el contador
            updateFieldCounter(container);
          });
        }
        
        // Configurar los botones de eliminar existentes
        const removeButtons = container.querySelectorAll('[data-action*="dynamic-fields#removeField"]');
        removeButtons.forEach(button => {
          // Eliminar event listeners previos para evitar duplicación
          const newButton = button.cloneNode(true);
          button.parentNode.replaceChild(newButton, button);
          
          newButton.addEventListener('click', function() {
            removeField(this);
          });
        });
        
        // Actualizar contador inicial
        updateFieldCounter(container);
      });
    }
    
    // 3. Configurar preview de imagen (si es necesario)
    function setupImagePreview() {
      const imageInputs = document.querySelectorAll('input[type="file"][data-action*="image-preview#preview"]');
      
      imageInputs.forEach(input => {
        // Eliminar event listeners previos para evitar duplicación
        const newInput = input.cloneNode(true);
        input.parentNode.replaceChild(newInput, input);
        
        newInput.addEventListener('change', function() {
          const file = this.files[0];
          if (!file) return;
          
          const previewContainer = this.closest('[data-controller="image-preview"]')?.querySelector('[data-image-preview-target="preview"]');
          
          if (previewContainer) {
            const reader = new FileReader();
            reader.onload = function(e) {
              previewContainer.innerHTML = `
                <img src="${e.target.result}" 
                     class="max-w-full h-auto rounded-md" 
                     style="max-height: 200px; object-fit: cover;">
              `;
            };
            reader.readAsDataURL(file);
          }
        });
      });
    }
    
    // Inicializar todas las funcionalidades
    setupSelectMessages();
    setupDynamicFields();
    setupImagePreview();
  }
  
  // Función para eliminar un campo (global para poder ser llamada desde onclick)
  window.removeField = function(button) {
    const field = button.closest('.dynamic-field');
    const container = button.closest('[data-controller="dynamic-fields"]');
    const destroyInput = field.querySelector('[data-destroy-input]');
    
    if (destroyInput) {
      // Si es un campo existente (con ID), marcarlo como eliminado
      destroyInput.value = "1";
      field.style.display = 'none';
    } else {
      // Si es un campo nuevo, eliminarlo del DOM
      field.remove();
    }
    
    // Actualizar el contador
    updateFieldCounter(container);
  };
  
  // Función para actualizar el contador de campos
  function updateFieldCounter(container) {
    const counter = container.querySelector('[data-dynamic-fields-target="counter"]');
    const addButton = container.querySelector('[data-dynamic-fields-target="addButton"]');
    const maxFields = parseInt(container.getAttribute('data-dynamic-fields-max-fields-value'), 10) || 6;
    
    // Contar campos visibles
    const fieldsContainer = container.querySelector('[data-dynamic-fields-target="container"]');
    const visibleFields = Array.from(fieldsContainer.querySelectorAll('.dynamic-field'))
      .filter(field => field.style.display !== 'none').length;
    
    // Actualizar texto del contador
    if (counter) {
      counter.textContent = `${visibleFields}/${maxFields}`;
    }
    
    // Habilitar/deshabilitar botón según cantidad de campos
    if (addButton) {
      if (visibleFields >= maxFields) {
        addButton.disabled = true;
        addButton.classList.add('opacity-50', 'cursor-not-allowed');
      } else {
        addButton.disabled = false;
        addButton.classList.remove('opacity-50', 'cursor-not-allowed');
      }
    }
  }
  
  // Inicializar en primer carga
  document.addEventListener('DOMContentLoaded', initializeFormFunctionality);
  
  // Inicializar después de cada navegación con Turbo
  document.addEventListener('turbo:load', initializeFormFunctionality);
  
  // Inicializar después de cada renderizado con Turbo
  document.addEventListener('turbo:render', initializeFormFunctionality);
  
  // También inicializar si el documento ya está cargado
  if (document.readyState === 'complete' || document.readyState === 'interactive') {
    initializeFormFunctionality();
  }
</script>

<!-- PARA EL MODAL DE VER DETALLES DE PROGRAMAS -->
<div id="programModal" class="hidden">
  <div class="scale-95">
    <!-- Cabecera del modal -->
    <div class="sticky">
      <h2>Detalles del Programa</h2>
      <button id="closeModal">
        <i class="fas fa-times"></i>
      </button>
    </div>
    
    <!-- Contenido del modal -->
    <div id="modalContent">
      <div class="animate-pulse">
        <div class="h-6 bg-gray-200 rounded w-3/4 mb-4"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mb-2"></div>
        <div class="h-4 bg-gray-200 rounded w-5/6 mb-6"></div>
        <div class="h-48 bg-gray-200 rounded mb-6"></div>
        <div class="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mb-6"></div>
      </div>
    </div>
  </div>
</div>

<!-- PARA EL MODAL DE VER DETALLES DE EVENTOS -->
<div id="eventModal" class="hidden">
  <div class="scale-95">
    <!-- Cabecera del modal -->
    <div class="sticky">
      <h2>Detalles del Evento</h2>
      <button id="closeEventModal">
        <i class="fas fa-times"></i>
      </button>
    </div>
    
    <!-- Contenido del modal -->
    <div id="eventModalContent">
      <div class="animate-pulse">
        <div class="h-6 bg-gray-200 rounded w-3/4 mb-4"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mb-2"></div>
        <div class="h-4 bg-gray-200 rounded w-5/6 mb-6"></div>
        <div class="h-48 bg-gray-200 rounded mb-6"></div>
        <div class="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mb-6"></div>
      </div>
    </div>
  </div>
</div>

<!-- JavaScript para ambos modales (PROGRAMAS Y EVENTOS) -->
<script>
  $(document).ready(function() {
    // Menú desplegable de usuario
    $("#userMenuButton").click(function(e) {
      e.stopPropagation();
      $("#userMenu").toggleClass("hidden");
    });
    
    $(document).click(function(e) {
      if (!$(e.target).closest("#userMenu").length && !$(e.target).closest("#userMenuButton").length) {
        $("#userMenu").addClass("hidden");
      }
    });
    
    // Configurar ambos modales
    setupProgramModal();
    setupEventModal();
  });

  // ===================== FUNCIONES PARA MODAL DE PROGRAMAS =====================
  function setupProgramModal() {
    const modal = document.getElementById('programModal');
    if (!modal) return;
    
    console.log("Configurando modal de programas");
    
    // Cerrar modal con botón de cerrar
    const closeButton = document.getElementById('closeModal');
    if (closeButton) {
      closeButton.addEventListener('click', function() {
        closeProgramModal();
      });
    }
    
    // Cerrar modal con clic fuera
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeProgramModal();
      }
    });
    
    // Cerrar modal con la tecla ESC
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
        closeProgramModal();
      }
    });
    
    // Vincular botones de "Ver detalles" de programas
    const detailButtons = document.querySelectorAll('[data-action="click->program#showDetails"]');
    detailButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        const programId = this.getAttribute('data-id');
        if (programId) {
          showProgramDetails(programId);
        }
      });
    });
  }

  function showProgramDetails(programId) {
    const modal = document.getElementById('programModal');
    const modalContent = document.getElementById('modalContent');
    
    if (!modal || !modalContent) return;
    
    console.log("Mostrando detalles del programa:", programId);
    
    // Mostrar modal con animación
    document.body.classList.add('overflow-hidden');
    modal.classList.remove('hidden');
    modal.classList.add('visible');
    
    // Animación de entrada
    setTimeout(() => {
      const modalDialog = modal.querySelector('div');
      if (modalDialog) {
        modalDialog.classList.add('scale-100');
        modalDialog.classList.remove('scale-95');
      }
    }, 10);
    
    // Cargar detalles del programa con AJAX
    modalContent.innerHTML = `
      <div class="animate-pulse p-4">
        <div class="h-8 bg-gray-200 rounded w-3/4 mb-6"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mb-4"></div>
        <div class="h-4 bg-gray-200 rounded w-5/6 mb-4"></div>
        <div class="h-32 bg-gray-200 rounded mb-6"></div>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="h-24 bg-gray-200 rounded"></div>
          <div class="h-24 bg-gray-200 rounded"></div>
        </div>
        <div class="h-4 bg-gray-200 rounded w-3/4 mt-6"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mt-4"></div>
      </div>
    `;
    
    fetch(`/admin/programs/${programId}`, {
      headers: {
        'Accept': 'text/html',
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.text();
    })
    .then(html => {
      modalContent.innerHTML = html;
    })
    .catch(error => {
      modalContent.innerHTML = `
        <div class="bg-red-50 border border-red-200 text-red-700 px-6 py-4 rounded-lg">
          <div class="flex items-center">
            <i class="fas fa-exclamation-circle text-xl mr-3"></i>
            <p class="font-semibold">Error al cargar los detalles del programa</p>
          </div>
          <p class="mt-2">${error.message}</p>
        </div>
      `;
    });
  }

  function closeProgramModal() {
    const modal = document.getElementById('programModal');
    if (!modal) return;
    
    console.log("Cerrando modal de programas");
    
    // Animación de salida
    modal.classList.remove('visible');
    const modalDialog = modal.querySelector('div');
    if (modalDialog) {
      modalDialog.classList.add('scale-95');
      modalDialog.classList.remove('scale-100');
    }
    
    // Ocultar modal después de la animación
    setTimeout(() => {
      modal.classList.add('hidden');
      document.body.classList.remove('overflow-hidden');
    }, 300);
  }

  // ===================== FUNCIONES PARA MODAL DE EVENTOS =====================
  function setupEventModal() {
    const modal = document.getElementById('eventModal');
    if (!modal) return;
    
    console.log("Configurando modal de eventos");
    
    // Cerrar modal con botón de cerrar
    const closeButton = document.getElementById('closeEventModal');
    if (closeButton) {
      closeButton.addEventListener('click', function() {
        closeEventModal();
      });
    }
    
    // Cerrar modal con clic fuera
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeEventModal();
      }
    });
    
    // Cerrar modal con la tecla ESC
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
        closeEventModal();
      }
    });
    
    // Vincular botones de "Ver detalles" de eventos
    // Buscar por diferentes patrones para máxima compatibilidad
    const detailButtons = document.querySelectorAll(`
      a[href*="/admin/events/"][title="Ver detalles"],
      [data-action*="event#showDetails"],
      [data-action*="click->event#showDetails"]
    `);
    
    detailButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        
        let eventId;
        
        // Método 1: Si tiene data-id, usarlo
        if (this.hasAttribute('data-id')) {
          eventId = this.getAttribute('data-id');
        }
        // Método 2: Si tiene data-event-id, usarlo
        else if (this.hasAttribute('data-event-id')) {
          eventId = this.getAttribute('data-event-id');
        }
        // Método 3: Extraer ID de la URL href
        else {
          const href = this.getAttribute('href');
          if (href) {
            const matches = href.match(/\/admin\/events\/(\d+)/);
            if (matches) {
              eventId = matches[1];
            }
          }
        }
        
        if (eventId) {
          console.log("Evento ID encontrado:", eventId);
          showEventDetails(eventId);
        } else {
          console.error("No se pudo extraer el ID del evento");
        }
      });
    });
  }

  function showEventDetails(eventId) {
    const modal = document.getElementById('eventModal');
    const modalContent = document.getElementById('eventModalContent');
    
    if (!modal || !modalContent) return;
    
    console.log("Mostrando detalles del evento:", eventId);
    
    // Mostrar modal con animación
    document.body.classList.add('overflow-hidden');
    modal.classList.remove('hidden');
    modal.classList.add('visible');
    
    // Animación de entrada
    setTimeout(() => {
      const modalDialog = modal.querySelector('div');
      if (modalDialog) {
        modalDialog.classList.add('scale-100');
        modalDialog.classList.remove('scale-95');
      }
    }, 10);
    
    // Cargar detalles del evento con AJAX
    modalContent.innerHTML = `
      <div class="animate-pulse p-4">
        <div class="h-8 bg-gray-200 rounded w-3/4 mb-6"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mb-4"></div>
        <div class="h-4 bg-gray-200 rounded w-5/6 mb-4"></div>
        <div class="h-32 bg-gray-200 rounded mb-6"></div>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="h-24 bg-gray-200 rounded"></div>
          <div class="h-24 bg-gray-200 rounded"></div>
        </div>
        <div class="h-4 bg-gray-200 rounded w-3/4 mt-6"></div>
        <div class="h-4 bg-gray-200 rounded w-1/2 mt-4"></div>
      </div>
    `;
    
    fetch(`/admin/events/${eventId}`, {
      headers: {
        'Accept': 'text/html',
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.text();
    })
    .then(html => {
      modalContent.innerHTML = html;
    })
    .catch(error => {
      console.error("Error al cargar evento:", error);
      modalContent.innerHTML = `
        <div class="bg-red-50 border border-red-200 text-red-700 px-6 py-4 rounded-lg">
          <div class="flex items-center">
            <i class="fas fa-exclamation-circle text-xl mr-3"></i>
            <p class="font-semibold">Error al cargar los detalles del evento</p>
          </div>
          <p class="mt-2">${error.message}</p>
        </div>
      `;
    });
  }

  function closeEventModal() {
    const modal = document.getElementById('eventModal');
    if (!modal) return;
    
    console.log("Cerrando modal de eventos");
    
    // Animación de salida
    modal.classList.remove('visible');
    const modalDialog = modal.querySelector('div');
    if (modalDialog) {
      modalDialog.classList.add('scale-95');
      modalDialog.classList.remove('scale-100');
    }
    
    // Ocultar modal después de la animación
    setTimeout(() => {
      modal.classList.add('hidden');
      document.body.classList.remove('overflow-hidden');
    }, 300);
  }

  // ===================== FUNCIONES GLOBALES Y EVENTOS =====================

  // Exponer funciones globalmente para programas
  window.showProgramDetails = showProgramDetails;
  window.closeProgramModal = closeProgramModal;
  window.setupProgramModal = setupProgramModal;
  // Mantener compatibilidad con closeModal (alias para programas)
  window.closeModal = closeProgramModal;

  // Exponer funciones globalmente para eventos
  window.showEventDetails = showEventDetails;
  window.closeEventModal = closeEventModal;
  window.setupEventModal = setupEventModal;

  // Asegurarse de que los modales se configuren cuando Turbo cambie la página
  document.addEventListener('turbo:load', function() {
    console.log("Turbo load - Configurando modales");
    setupProgramModal();
    setupEventModal();
  });

  document.addEventListener('turbo:render', function() {
    console.log("Turbo render - Configurando modales");
    setupProgramModal();
    setupEventModal();
  });
</script>

<!-- ------------------------------------------------------------ -->
<!-- SCRIPT PARA SUBMENÚS DESPLEGABLES DE LA BARRA LATERAL -->
<script>
// JavaScript mejorado para manejar el estado activo
function initializeActiveNavigation() {
  console.log("Inicializando navegación activa mejorada");
  
  // Detectar elementos activos y expandir submenús automáticamente
  $('.nav-sublink.active').each(function() {
    const parentSubmenu = $(this).closest('.submenu-item');
    const parentHeader = parentSubmenu.find('.submenu-header');
    
    if (parentSubmenu.length && parentHeader.length) {
      // Marcar como expandido
      parentSubmenu.addClass('expanded');
      parentHeader.addClass('has-active-child');
      
      // Rotar el icono
      const icon = parentHeader.find('.submenu-icon');
      icon.css('transform', 'rotate(90deg)');
      
      console.log("Submenú expandido automáticamente para elemento activo");
    }
  });
  
  // Manejar clics en headers de submenú
  $('.submenu-header').off('click.activeNav').on('click.activeNav', function(e) {
    e.preventDefault();
    e.stopPropagation();
    
    const submenuItem = $(this).closest('.submenu-item');
    const isCurrentlyExpanded = submenuItem.hasClass('expanded');
    
    // Si no tiene elementos activos, permitir toggle normal
    if (!$(this).hasClass('has-active-child')) {
      // Cerrar otros submenús
      $('.submenu-item').not(submenuItem).removeClass('expanded');
      $('.submenu-item').not(submenuItem).find('.submenu-icon').css('transform', 'rotate(0deg)');
      
      // Toggle del submenú actual
      submenuItem.toggleClass('expanded');
      
      const icon = $(this).find('.submenu-icon');
      if (submenuItem.hasClass('expanded')) {
        icon.css('transform', 'rotate(90deg)');
      } else {
        icon.css('transform', 'rotate(0deg)');
      }
    }
    // Si tiene elementos activos, mantener expandido pero permitir colapso manual
    else if (isCurrentlyExpanded) {
      submenuItem.removeClass('expanded');
      const icon = $(this).find('.submenu-icon');
      icon.css('transform', 'rotate(0deg)');
      
      // Después de 300ms, volver a expandir automáticamente
      setTimeout(() => {
        submenuItem.addClass('expanded');
        icon.css('transform', 'rotate(90deg)');
      }, 300);
    }
  });
}

// Inicializar en carga del documento
$(document).ready(function() {
  initializeActiveNavigation();
});

// Reinicializar con Turbo
$(document).on('turbo:load turbo:render', function() {
  initializeActiveNavigation();
});

// Exponer función globalmente
window.initializeActiveNavigation = initializeActiveNavigation;
</script>

</body>
</html>